<?xml version="1.0" encoding="utf-8"?>
<xs:schema targetNamespace="urn:Erwine.Leonard.T:PowerShellModules:Setup:SetupManifestData.xsd" elementFormDefault="qualified"
           xmlns:c="urn:Erwine.Leonard.T:PowerShellModules:Setup:CommonTypes.xsd"
           xmlns:m="urn:Erwine.Leonard.T:PowerShellModules:Setup:SetupManifestData.xsd"
           xmlns:b="urn:Erwine.Leonard.T:PowerShellModules:Setup:SetupBindings.xsd"
           xmlns:h="http://www.w3.org/1999/xhtml"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="urn:Erwine.Leonard.T:PowerShellModules:Setup:CommonTypes.xsd" />
  <xs:element name="ManifestData">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="LongDescription" type="xs:string" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:appinfo>
              <b:Bindings>
                <b:HelpFile.Binding Section="Description" />
              </b:Bindings>
            </xs:appinfo>
          </xs:annotation>
        </xs:element>
        <xs:element name="Attribution" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:attribute name="Author" type="xs:string">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="Author" />
                    <b:HelpFile.Binding Section="Author" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="CompanyName" type="xs:string">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="CompanyName" />
                    <b:HelpFile.Binding Section="CompanyName" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Copyright" type="xs:string">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="Copyright" />
                    <b:HelpFile.Binding Section="Copyright" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="PowerShell" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:attribute name="Version" type="m:Version">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="ModuleVersion" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="HostName" type="c:NonEmptyString">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="PowerShellHostName" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="HostVersion" type="m:Version">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="PowerShellHostVersion" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="Platform" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:attribute name="Architecture" type="m:ProcessorArchitecture">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="ProcessorArchitecture" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="ClrVersion" type="m:Version">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="ClrVersion" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="DotNetFramework" type="m:Version">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="DotNetFrameworkVersion" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="Exports" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
              <xs:element name="Alias">
                <xs:annotation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="AliasesToExport" />
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                  <xs:union memberTypes="m:CommandName c:Identifier" />
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cmdlet" type="m:Command">
                <xs:annotation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="CmdletsToExport" SourceXPath="@Name" />
                      <b:HelpFile.Binding Section="Command.Name" SourceXPath="@Name" />
                      <b:HelpFile.Binding Section="Command.Summary" SourceXPath="Summary" />
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element name="Function" type="m:Command">
                <xs:annotation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="FunctionsToExport" SourceXPath="@Name" />
                      <b:HelpFile.Binding Section="Command.Name" SourceXPath="@Name" />
                      <b:HelpFile.Binding Section="Command.Summary" SourceXPath="Summary" />
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:choice>
            <xs:attribute name="DefaultCommandPrefix" type="c:Identifier">
              <xs:annotation>
                <xs:appinfo>
                  <b:Bindings>
                    <b:ModuleManifest.Binding Property="DefaultCommandPrefix" />
                  </b:Bindings>
                </xs:appinfo>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="Requirements" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <!--New-ModuleManifest -RequiredModules BitsTransfer,@{ModuleName="PSScheduledJob";ModuleVersion="1.0.0.0";GUID="50cdb55f-5ab7-489f-9e94-4ec21ff51e59"}-->
              <xs:element name="Module">
                <xs:annotation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="RequiredModule.Version" SourceXPath="@Version">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                      <b:ModuleManifest.Binding Property="RequiredModule.Guid" SourceXPath="@Guid">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:complexContent>
                    <xs:extension base="m:ModuleRefBase">
                      <xs:attribute name="Name" type="m:FileName" use="required">
                        <xs:annotation>
                          <xs:appinfo>
                            <b:Bindings>
                              <b:ModuleManifest.Binding Property="RequiredModules">
                                <b:Not>
                                  <b:Or>
                                    <b:AreEqual XPath="../@AvailableOnly" Value="true" />
                                    <b:IsDefined XPath="../@Version"/>
                                    <b:IsDefined XPath="../@Guid"/>
                                  </b:Or>
                                </b:Not>
                              </b:ModuleManifest.Binding>
                              <b:ModuleManifest.Binding Property="RequiredModule.Name">
                                <b:And>
                                  <b:Not>
                                    <b:AreEqual XPath="../@AvailableOnly" Value="true" />
                                  </b:Not>
                                  <b:Or>
                                    <b:IsDefined XPath="../@Version"/>
                                    <b:IsDefined XPath="../@Guid"/>
                                  </b:Or>
                                </b:And>
                              </b:ModuleManifest.Binding>
                            </b:Bindings>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="AvailableOnly" type="xs:boolean" default="false">
                        <xs:annotation>
                          <xs:documentation>
                            <h:p>
                              If true, then the associated module only needs to be present at the time of
                              installation, otherwise false (or not specified) if the required module will
                              be listed in the &quot;RequiredModules&quot; property of the target module
                              manifest.
                            </h:p>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:complexContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="Assembly">
                <xs:annotation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="RequiredAssembly.Name" SourceXPath="@Name">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                      <b:ModuleManifest.Binding Property="RequiredAssembly.Version" SourceXPath="@Version">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                      <b:ModuleManifest.Binding Property="RequiredAssembly.ProcessorArchitecture" SourceXPath="@ProcessorArchitecture">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                      <b:ModuleManifest.Binding Property="RequiredAssembly.CultureInfo" SourceXPath="@CultureInfo">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                      <b:ModuleManifest.Binding Property="RequiredAssembly.PublicKeyToken" SourceXPath="@PublicKeyToken">
                        <b:Not>
                          <b:AreEqual XPath="@AvailableOnly" Value="true" />
                        </b:Not>
                      </b:ModuleManifest.Binding>
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:complexContent>
                    <xs:extension base="m:AssemblyName">
                      <xs:attribute name="AvailableOnly" type="xs:boolean" default="false">
                        <xs:annotation>
                          <xs:documentation>
                            <h:p>
                              If true, then the associated module only needs to be present at the time of
                              installation, otherwise false (or not specified) if the required assembly will
                              be listed in the &quot;RequiredAssemblies&quot; property of the target module
                              manifest.
                            </h:p>
                          </xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:complexContent>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <!--New-ModuleManifest -NestedModules BitsTransfer,@{ModuleName="PSScheduledJob";ModuleVersion="1.0.0.0";GUID="50cdb55f-5ab7-489f-9e94-4ec21ff51e59"}-->
        <!--New-ModuleManifest -ModuleList BitsTransfer,@{ModuleName="PSScheduledJob";ModuleVersion="1.0.0.0";GUID="50cdb55f-5ab7-489f-9e94-4ec21ff51e59"}-->
        <xs:element name="InstallFiles" minOccurs="0" maxOccurs="1">
          <xs:annotation>
            <xs:documentation>
              <h:p>Files to be installed with the module.</h:p>
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="Type">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Types files to be installed as-is, and included in the &quot;TypesToProcess&quot; property of the module manifest.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:Ps1XmlFile">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of ps1xml file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="TypesToProcess" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="Format">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Format files to be installed as-is, and included in the &quot;FormatsToProcess&quot; property of the module manifest.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:Ps1XmlFile">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of ps1xml file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FormatsToProcess" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="Script">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Scripts to be installed as-is, and included in the &quot;ScriptsToProcess&quot; property of the module manifest.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:Ps1Path">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of script file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="ScriptsToProcess" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="File">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Other files to be installed as-is, and included in the &quot;FileList&quot; property of the module manifest.</h:p>
                    <h:p>This key is designed to act as a module inventory. The files listed in the key are not automatically exported with the module.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:RelativePath" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FileList" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="Module">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Lists all modules that are included in this module.</h:p>
                    <h:p>This key is designed to act as a module inventory. The modules that are listed in the value of this key are not automatically processed.</h:p>
                  </xs:documentation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="ModuleList.Version" SourceXPath="@Version" />
                      <b:ModuleManifest.Binding Property="ModuleList.Guid" SourceXPath="@Guid" />
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:ModuleFile">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Name of module file.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="ModuleList">
                            <b:Not>
                              <b:Or>
                                <b:IsDefined XPath="../@Version"/>
                                <b:IsDefined XPath="../@Guid"/>
                              </b:Or>
                            </b:Not>
                          </b:ModuleManifest.Binding>
                          <b:ModuleManifest.Binding Property="ModuleList.Name">
                            <b:Or>
                              <b:IsDefined XPath="../@Version"/>
                              <b:IsDefined XPath="../@Guid"/>
                            </b:Or>
                          </b:ModuleManifest.Binding>
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="NestedModule">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Nested module file to be installed as-is, and included in the &quot;NestedModules&quot; property of the module manifest.</h:p>
                    <h:p>Specifies script modules (.psm1) and binary modules (.dll) that are imported into the module's session state. The files in the NestedModules key run in the order in which they are listed in the value.</h:p>
                    <h:p>Typically, nested modules contain commands that the root module needs for its internal processing. By default, the commands in nested modules are exported from the module's session state into the caller's session state, but the root module can restrict the commands that it exports, for example, by using an Export-ModuleMember command.</h:p>
                    <h:p>Nested modules in the module session state are available to the root module, but they are not returned by a Get-Module command in the caller's session state.</h:p>
                    <h:p>Scripts (.ps1) that are listed in the NestedModules key are run in the module's session state, not in the caller's session state. To run a script in the caller's session state, list the script file name in the value of the ScriptsToProcess key in the manifest.</h:p>
                  </xs:documentation>
                  <xs:appinfo>
                    <b:Bindings>
                      <b:ModuleManifest.Binding Property="NestedModule.Version" SourceXPath="@Version" />
                      <b:ModuleManifest.Binding Property="NestedModule.Guid" SourceXPath="@Guid" />
                    </b:Bindings>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:ModuleFile">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Name of module file.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="NestedModules">
                            <b:Not>
                              <b:Or>
                                <b:IsDefined XPath="../@Version"/>
                                <b:IsDefined XPath="../@Guid"/>
                              </b:Or>
                            </b:Not>
                          </b:ModuleManifest.Binding>
                          <b:ModuleManifest.Binding Property="NestedModule.Name">
                            <b:Or>
                              <b:IsDefined XPath="../@Version"/>
                              <b:IsDefined XPath="../@Guid"/>
                            </b:Or>
                          </b:ModuleManifest.Binding>
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="Type.Transformed">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Type file to be installed after transformation, and included in the &quot;TypesToProcess&quot; property of the module manifest.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:Ps1XmlFile">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of ps1xml file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="TypesToProcess" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="StyleSheet" type="m:XslPath">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>If this attribute is used, then XSL transformation, otherwise, comment-based transformation will be applied.</h:p>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="Format.Transformed">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Format file to be installed after transformation, and included in the &quot;FormatsToProcess&quot; property of the module manifest.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:Ps1XmlFile">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of ps1xml file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FormatsToProcess" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="StyleSheet" type="m:XslPath">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>If this attribute is used, then XSL transformation, otherwise, comment-based transformation will be applied.</h:p>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="Script.Transformed">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Script file to be installed after comment-based pre-procesing, and included in the &quot;ScriptsToProcess&quot; property of the module manifest.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Name" type="m:Ps1Path">
                    <xs:annotation>
                      <xs:documentation>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="ScriptsToProcess" />
                        </b:Bindings>
                        <h:p>Path of script file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="File.XslTransformed">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Other files to be installed after XSL-based transformation, and included in the &quot;FileList&quot; property of the module manifest.</h:p>
                    <h:p>This key is designed to act as a module inventory. The files listed in the key are not automatically exported with the module.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="TargetExtension" type="m:FileName" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>New extension for target file (without leading period).</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FileList.Extension" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Name" type="m:XmlPath" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FileList.BaseName" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="StyleSheet" type="m:XslPath" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>If this attribute is used, then XSL transformation, otherwise, comment-based transformation will be applied.</h:p>
                      </xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="File.ScriptOutput">
                <xs:annotation>
                  <xs:documentation>
                    <h:p>Other files to be installed from output of script, and included in the &quot;FileList&quot; property of the module manifest.</h:p>
                    <h:p>This key is designed to act as a module inventory. The files listed in the key are not automatically exported with the module.</h:p>
                  </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="TargetExtension" type="m:FileName" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>New extension for target file (without leading period).</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FileList.Extension" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Name" type="m:Ps1Path" use="required">
                    <xs:annotation>
                      <xs:documentation>
                        <h:p>Path of file installation location, relative to the module installation location.</h:p>
                      </xs:documentation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FileList.BaseName" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="CompiledAssembly">
                <xs:complexType>
                  <xs:choice minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="Compile">
                      <xs:complexType>
                        <xs:attribute name="Path" type="m:CompilePath" use="required" />
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="EmbeddedResource">
                      <xs:complexType>
                        <xs:attribute name="Path" type="m:RelativePath" use="required" />
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="AssemblyReference" type="m:AssemblyName" />
                    <xs:element name="ResourceFile">
                      <xs:complexType>
                        <xs:attribute name="Path" type="m:ResourcePath" use="required" />
                        <xs:attribute name="Code" type="m:CompilePath" use="required" />
                      </xs:complexType>
                    </xs:element>
                  </xs:choice>
                  <xs:attribute name="FileName" type="m:DllPath" use="required">
                    <xs:annotation>
                      <xs:appinfo>
                        <b:Bindings>
                          <b:ModuleManifest.Binding Property="FileList" />
                        </b:Bindings>
                      </xs:appinfo>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="IncludeDebugInformation" type="xs:boolean" />
                  <xs:attribute name="ConditionalCompilationSymbols" type="xs:string" />
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name="PrivateData" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:choice>
              <xs:group ref="m:PrivateDataValue" />
              <xs:element name="Cast" type="m:Cast" />
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Name" type="m:FileName" use="required">
        <xs:annotation>
          <xs:appinfo>
            <c:New.ModuleManifest Param="RootModule" />
          </xs:appinfo>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="m:Version" use="required">
        <xs:annotation>
          <xs:appinfo>
            <c:New.ModuleManifest Param="ModuleVersion" />
          </xs:appinfo>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Guid" type="m:Guid" use="required">
        <xs:annotation>
          <xs:appinfo>
            <c:New.ModuleManifest Param="Guid" />
          </xs:appinfo>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Description" type="c:NonEmptyString">
        <xs:annotation>
          <xs:appinfo>
            <b:Bindings>
              <b:ModuleManifest.Binding Property="Description" />
              <b:HelpFile.Binding Section="Description">
                <b:And>
                  <b:IsDefined XPath="../LongDescription" />
                  <b:Not><b:IsEmpty XPath="../LongDescription" /></b:Not>
                </b:And>
              </b:HelpFile.Binding>
            </b:Bindings>
          </xs:appinfo>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="HelpInfoUri" type="xs:anyURI">
        <xs:annotation>
          <xs:appinfo>
            <c:New.ModuleManifest Param="HelpInfoUri" />
          </xs:appinfo>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <!--<xs:complexType name="FileNameList">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Name" type="m:FileName" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="RelativePathList">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Name" type="m:RelativePath" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CmdletList">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Name" type="m:Cmdlet" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PSIdentifierList">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Name" type="m:PSIdentifier" />
    </xs:sequence>
  </xs:complexType>-->
  <!--New-ModuleManifest -NestedModules BitsTransfer,@{ModuleName="PSScheduledJob";ModuleVersion="1.0.0.0";GUID="50cdb55f-5ab7-489f-9e94-4ec21ff51e59"}-->
  <xs:complexType name="AssemblyName">
    <xs:attribute name="Name" type="m:FileName" use="required">
      <xs:annotation>
        <xs:documentation>
          <h:p>Name of assembly.</h:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Version" type="m:Version">
      <xs:annotation>
        <xs:documentation>
          <h:p>Assembly Version</h:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ProcessorArchitecture" type="m:ProcessorArchitecture">
      <xs:annotation>
        <xs:documentation>
          <h:p>Processor architecture</h:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Culture" type="m:CultureInfo">
      <xs:annotation>
        <xs:documentation>
          <h:p>Culture supported by the assembly</h:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="PublicKeyToken" type="m:PublicKeyToken">
      <xs:annotation>
        <xs:documentation>
          <h:p>Public key token for strong name.</h:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="ModuleRefBase">
    <xs:attribute name="Version" type="m:Version" />
    <xs:attribute name="Guid" type="m:Guid" />
  </xs:complexType>
  <xs:complexType name="NestedModule">
    <xs:complexContent>
      <xs:extension base="m:ModuleRefBase">
        <xs:attribute name="Name" type="m:ModuleFile" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Command">
    <xs:sequence minOccurs="0" maxOccurs="1">
      <xs:element name="Summary" type="c:NonEmptyString" />
    </xs:sequence>
    <xs:attribute name="Name" type="m:CommandName" />
  </xs:complexType>
  <xs:group name="PrivateDataValue">
    <xs:choice>
      <xs:element name="String" type="m:SingleLineText" />
      <xs:element name="HereToString" type="xs:string" />
      <xs:element name="Hashtable" type="m:Hashtable" />
      <xs:element name="Array" type="m:Array" />
      <xs:element name="Number" type="m:Number" />
      <xs:element name="Enum" type="m:EnumValue" />
    </xs:choice>
  </xs:group>
  <xs:complexType name="Hashtable">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Member">
        <xs:complexType>
          <xs:choice>
            <xs:group ref="m:PrivateDataValue" />
            <xs:element name="Cast" type="m:Cast" />
          </xs:choice>
          <xs:attribute name="Key" type="c:Identifier" />
        </xs:complexType>
      </xs:element>
      <xs:element name="Comment" type="m:SingleLineText" />
      <xs:element name="CommentBlock" type="xs:string" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="Array">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="m:PrivateDataValue" />
      <xs:element name="Cast" type="m:Cast" />
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="Cast">
    <xs:choice>
      <xs:group ref="m:PrivateDataValue" />
    </xs:choice>
    <xs:attribute name="Type" type="c:GenericTypeName" />
  </xs:complexType>
  <xs:complexType name="Number">
    <xs:attribute name="Value">
      <xs:simpleType>
        <xs:union memberTypes="xs:double xs:decimal xs:float xs:integer xs:long" />
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EnumValue">
    <xs:attribute name="FullName" type="c:BasicTypeName" use="required" />
    <xs:attribute name="Value" type="c:Identifier" use="required" />
  </xs:complexType>
  <xs:complexType name="SingleLineText">
    <xs:attribute name="Text">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="^[^\r\n]*$" />
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="ProcessorArchitecture">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None" />
      <xs:enumeration value="MSIL" />
      <xs:enumeration value="X86" />
      <xs:enumeration value="IA64" />
      <xs:enumeration value="Amd64" />
      <xs:enumeration value="Arm" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FileName">
    <xs:restriction base="xs:string">
      <xs:pattern value="^[a-zA-Z'~`!@#$%^&amp;*()_\-+={}:?\[\]\;,.]+$" />
      <xs:minLength value="1" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ModuleFile">
    <xs:union memberTypes="m:Psm1File m:DllFile m:Psd1File m:CdXmlFile m:XamlFile" />
  </xs:simpleType>
  <xs:simpleType name="DllFile">
    <xs:restriction base="m:FileName">
      <xs:pattern value="^([^.]+\.)[Dd][Ll][Ll]$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Psd1File">
    <xs:restriction base="m:FileName">
      <xs:pattern value="^([^.]+\.)[Pp][Ss][Dd]1$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CdXmlFile">
    <xs:restriction base="m:FileName">
      <xs:pattern value="^([^.]+\.)[Cc][Dd][Xx][Mm][Ll]$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="XamlFile">
    <xs:restriction base="m:FileName">
      <xs:pattern value="^([^.]+\.)[Xx][Aa][Mm][Ll]$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Psm1File">
    <xs:restriction base="m:FileName">
      <xs:pattern value="^([^.]+\.)[Pp][Ss][Mm]1$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Ps1XmlFile">
    <xs:restriction base="m:FileName">
      <xs:pattern value="^([^.]+\.)[Pp][Ss]1[Xx][Mm][Ll]$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="RelativePath">
    <xs:restriction base="xs:string">
      <xs:pattern value="^[a-zA-Z'~`!@#$%^&amp;*()_\-+={}:?\[\]\;,.]+([\\/][a-zA-Z'~`!@#$%^&amp;*()_\-+={}:?\[\]\;,.]+)*$" />
      <xs:minLength value="1" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Ps1Path">
    <xs:restriction base="m:RelativePath">
      <xs:pattern value="^([^.]+\.)[Pp][Ss]1$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DllPath">
    <xs:restriction base="m:RelativePath">
      <xs:pattern value="^([^.]+\.)[Dd][Ll][Ll]$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CompilePath">
    <xs:restriction base="m:RelativePath">
      <xs:pattern value="^([^.]+\.)([Cc][Ss]|[Vv][Bb])$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ResourcePath">
    <xs:restriction base="m:RelativePath">
      <xs:pattern value="^([^.]+\.)([Rr][Ee][Ss][Xx])$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="XmlPath">
    <xs:restriction base="m:RelativePath">
      <xs:pattern value="^([^.]+\.)[Xx][Mm][Ll]$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="XslPath">
    <xs:restriction base="m:RelativePath">
      <xs:pattern value="^([^.]+\.)[Xx][Ss][Ll][Tt]?$" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Guid">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="\{[\da-fA-F]{8}(-[\da-fA-F]{4}){4}[\da-fA-F]{8}\}" />
          <xs:length value="38" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}(-[\da-fA-F]{4}){4}[\da-fA-F]{8}" />
          <xs:length value="36" />
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{32}" />
          <xs:length value="32" />
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="Version">
    <xs:restriction base="xs:string">
      <xs:pattern value="^(25[0-5]|2[0-4]\d|1\d\d|\d\d?)\.(25[0-5]|2[0-4]\d|1\d\d|\d\d?)(\.(25[0-5]|2[0-4]\d|1\d\d|\d\d?)(\.(25[0-5]|2[0-4]\d|1\d\d|\d\d?))?)?$" />
      <xs:minLength value="3" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CommandName">
    <xs:restriction base="xs:string">
      <xs:pattern value="^[_a-zA-Z][\d_a-zA-Z]*-[_a-zA-Z][\d_a-zA-Z]*$" />
      <xs:minLength value="3" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="CultureInfo">
    <xs:restriction base="xs:string">
      <xs:pattern value="^(neutral|[a-zA-Z]{2,3}(-[a-zA-Z\d]+)*)$" />
      <xs:minLength value="3" />
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PublicKeyToken">
    <xs:restriction base="xs:string">
      <xs:pattern value="[_a-fA-F]{16}" />
      <xs:length value="16" />
    </xs:restriction>
  </xs:simpleType>
</xs:schema>
