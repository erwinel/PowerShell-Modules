<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Erwine.Leonard.T.LteDevLib</name>
    </assembly>
    <members>
        <member name="T:LteDev.CodeXmlDocHelper">
            <summary>
            Manages Source Code XML Documentation.
            </summary>
        </member>
        <member name="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey">
            <summary>
            Refers to a specific instance of an <seealso cref="T:System.Xml.Linq.XDocument"/> which contains Source Code XML Documentation of an assembly at a specific location.
            </summary>
        </member>
        <member name="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.SourceUri">
            <summary>
            A URI string which describes the source location of the referenced Source Code XML Documentation.
            </summary>
        </member>
        <member name="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Name">
            <summary>
            Name of assembly which the referenced Source Code XML Documentation refers to.
            </summary>
        </member>
        <member name="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.FullName">
            <summary>
            Full Name of assembly which the referenced Source Code XML Documentation refers to.
            </summary>
            <remarks>If this is null, then the assembly full name is not known.</remarks>
        </member>
        <member name="M:LteDev.CodeXmlDocHelper.XmlDocSourceKey.#ctor(System.Reflection.AssemblyName)">
            <summary>
            Create new <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> from an assembly name.
            </summary>
            <param name="name"><seealso cref="T:System.Reflection.AssemblyName"/> from which to initialize the new <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> value.</param>
        </member>
        <member name="M:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Create(System.String,System.String)">
            <summary>
            Create new <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> from a formatted name and location.
            </summary>
            <param name="assemblyName">Formatted name of assembly.</param>
            <param name="codeBase">Path or URI representing location of an assembly.</param>
            <returns>A new <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> object.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="assemblyName"/> or <paramref name="codeBase"/> is null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="assemblyName"/> is not a valid assembly name
            or <paramref name="codeBase"/> is not a valid path or URI string.</exception>
        </member>
        <member name="M:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Create(System.Reflection.Assembly,System.String)">
            <summary>
            Create a new <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> from an <seealso cref="T:System.Reflection.Assembly"/> object and an optional location uri override.
            </summary>
            <param name="assembly"><seealso cref="T:System.Reflection.Assembly"/> which the resulting <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> is to represent.</param>
            <param name="uriOverride">Optional value which overrides the uri to use as the assembly's location.
            If this value is not provided, is null or empty, then the assembly's <seealso cref="P:System.Reflection.Assembly.Location"/> value will be used to ascertain the location.</param>
            <returns>A new <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> representing the provided <seealso cref="T:System.Reflection.Assembly"/> object.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="uriOverride"/> is not a valid path or URI string.</exception>
        </member>
        <member name="M:LteDev.CodeXmlDocHelper.XmlDocSourceKey.AsUriString(System.String)">
            <summary>
            Ensures a string is formatted as a URI.
            </summary>
            <param name="pathOrUri">A string representing a path or URI.</param>
            <returns><paramref name="pathOrUri"/> converted to an absolute URI.</returns>
            <remarks>If <paramref name="pathOrUri"/> is null or empty, an empty string is returned.
            <para>If <paramref name="pathOrUri"/> is not a valid absolute URI string, then <seealso cref="M:System.IO.Path.GetFullPath(System.String)"/>
            is invoked before it is converted to a absolute URI string.</para>
            <para>Likewise, if <paramref name="pathOrUri"/> is a URI string with a <c>file:</c> schema,
            then <seealso cref="M:System.IO.Path.GetFullPath(System.String)"/> is invoked with the <seealso cref="P:System.Uri.LocalPath"/>
            value before being re-converted to a URI string.</para></remarks>
        </member>
        <member name="M:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Equals(LteDev.CodeXmlDocHelper.XmlDocSourceKey)">
            <summary>
            Determines if current <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> object is equal to another.
            </summary>
            <param name="other">Other <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> to compare.</param>
            <returns><c>true</c> if current <see cref="T:LteDev.CodeXmlDocHelper.XmlDocSourceKey"/> is equal to <paramref name="other"/>; otherwise, <c>false</c>.</returns>
            <remarks>The <see cref="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Name"/> and <see cref="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.FullName"/> value comparisons are case-sensitive, which the
            <see cref="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.SourceUri"/> value comparison is not case-sensitive.</remarks>
        </member>
        <member name="M:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Equals(System.String)">
            <summary>
            Determines if a string value is equal to the current <see cref="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.Name"/> or <see cref="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.FullName"/>.
            </summary>
            <param name="other">Assembly name to compare.</param>
            <returns><c>true</c> if see cref="Name"/> or <see cref="P:LteDev.CodeXmlDocHelper.XmlDocSourceKey.FullName"/> is equal to <paramref name="other"/>; otherwise, <c>false</c>.</returns>
            <remarks>This is a case-sensitive comparison.</remarks>
        </member>
        <member name="T:LteDev.Commands.Export_PSHelpXml">
            <summary>
            Generates PSMaml help
            </summary>
        </member>
        <member name="P:LteDev.Commands.Export_PSHelpXml.InputModule">
            <summary>
            <seealso cref="T:System.Management.Automation.PSModuleInfo"/> object(s) from which to create help XML.
            </summary>
        </member>
        <member name="P:LteDev.Commands.Export_PSHelpXml.InputCommand">
            <summary>
            <seealso cref="T:System.Management.Automation.CommandInfo"/> object(s) from which to create help XML.
            </summary>
        </member>
        <member name="P:LteDev.Commands.Export_PSHelpXml.Module">
            <summary>
            <seealso cref="T:System.Management.Automation.PSModuleInfo"/> object to be used for creating help XML.
            </summary>
            <remarks>If the <seealso cref="P:System.Management.Automation.PSCmdlet.ParameterSetName"/> is <see cref="F:LteDev.Commands.Export_PSHelpXml.ParameterSetName_Command"/>, then
            this optionally provides context for generating help for <see cref="P:LteDev.Commands.Export_PSHelpXml.InputCommand"/> objects;
            otherwise, help XML is generated from this object.</remarks>
        </member>
        <member name="P:LteDev.Commands.Export_PSHelpXml.DoNotEncapsulate">
            <summary>
            Do not encapsulate all exported commands of each <seealso cref="T:System.Management.Automation.PSModuleInfo"/> into single elements.
            </summary>
        </member>
        <member name="P:LteDev.Commands.Export_PSHelpXml.Encapsulate">
            <summary>
            Encapsulate all commands into a single element.
            </summary>
        </member>
        <member name="M:LteDev.Commands.Export_PSHelpXml.CreateHelpItemsElement">
            <summary>
            Creates an <seealso cref="T:System.Xml.Linq.XElement"/> object for creating a PSMaml help document.
            </summary>
            <returns>An <seealso cref="T:System.Xml.Linq.XElement"/> object for creating a PSMaml help document.</returns>
        </member>
        <member name="M:LteDev.Commands.Export_PSHelpXml.CreatePSMaml(System.Management.Automation.PSModuleInfo,System.Xml.Linq.XElement,System.Management.Automation.Cmdlet)">
            <summary>
            Generates <seealso cref="T:System.Xml.Linq.XElement"/>s for each exported module command.
            </summary>
            <param name="module"><seealso cref="T:System.Management.Automation.PSModuleInfo"/> containing exported commands.</param>
            <param name="containerElement">If this is not null, then all generated <seealso cref="T:System.Xml.Linq.XElement"/>
            objects will be added to this element; otherwise, all generated <seealso cref="T:System.Xml.Linq.XElement"/>
            objects will be written to output.</param>
            <param name="cmdlet"><seealso cref="T:System.Management.Automation.Cmdlet"/> which is invoking this method.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="module"/> or <paramref name="cmdlet"/> is null.</exception>
        </member>
        <member name="M:LteDev.Commands.Export_PSHelpXml.CreateCommandElement(System.Management.Automation.CommandInfo,System.Management.Automation.Cmdlet)">
            <summary>
            Creates PSMaml help XML for a command.
            </summary>
            <param name="commandInfo"><seealso cref="T:System.Management.Automation.CommandInfo"/> object from which to generate help XML.</param>
            <param name="cmdlet"><seealso cref="T:System.Management.Automation.Cmdlet"/> which is invoking this method.</param>
            <returns>An <seealso cref="T:System.Xml.Linq.XElement"/> object representing the PSMaml help for the <paramref name="commandInfo"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandInfo"/> or <paramref name="cmdlet"/> is null.</exception>
        </member>
        <member name="M:LteDev.Commands.Export_PSHelpXml.CreateCommandElement(System.String,System.Management.Automation.CommandInfo,System.Management.Automation.Cmdlet)">
            <summary>
            Creates PSMaml help XML for a command.
            </summary>
            <param name="name">Name to use for the command.</param>
            <param name="commandInfo"><seealso cref="T:System.Management.Automation.CommandInfo"/> object from which to generate help XML.</param>
            <param name="cmdlet"><seealso cref="T:System.Management.Automation.Cmdlet"/> which is invoking this method.</param>
            <returns>An <seealso cref="T:System.Xml.Linq.XElement"/> object representing the PSMaml help for the <paramref name="commandInfo"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="commandInfo"/> or <paramref name="cmdlet"/> is null.</exception>
        </member>
        <member name="T:LteDev.Commands.Get_PSHelpXml">
            <summary>
            Generates PowerShell help file from module information.
            </summary>
            <description>
            Gets information from the PowerShell module, including the DLL files, if the module is binary.
            </description>
        </member>
        <member name="P:LteDev.Commands.Get_PSHelpXml.ModuleInfo">
            <summary>
            Information about the module, which is used to generate parameter help.
            </summary>
        </member>
        <member name="P:LteDev.Commands.Get_PSHelpXml.Path">
            <summary>
            Path of module to load.
            </summary>
            <remarks>Using this parameter results in the module being loaded, if it not already loaded.</remarks>
        </member>
        <member name="P:LteDev.Commands.Get_PSHelpXml.LiteralPath">
            <summary>
            Literal path of module to load.
            </summary>
            <remarks>Using this parameter results in the module being loaded, if it not already loaded.</remarks>
        </member>
        <member name="T:LteDev.ModuleBuilder.CLRPropertyInfo">
            <summary>
            Contextual information for a CLR property.
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CLRPropertyInfo.TypeInfo">
            <summary>
            Contextual information for the reflected CLR type.
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CLRPropertyInfo.PropertyInfo">
            <summary>
            CLR property information.
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CLRPropertyInfo.XmlDoc">
            <summary>
            Member element for associated property.
            </summary>
        </member>
        <member name="M:LteDev.ModuleBuilder.CLRPropertyInfo.#ctor(System.Reflection.PropertyInfo,LteDev.ModuleBuilder.CLRTypeInfo)">
            <summary>
            Initialize new <see cref="T:LteDev.ModuleBuilder.CLRPropertyInfo"/> object.
            </summary>
            <param name="propertyInfo">Property information.</param>
            <param name="typeContext">Contextual information for Reflected CLR type.</param>
        </member>
        <member name="M:LteDev.ModuleBuilder.CLRPropertyInfo.Equals(LteDev.ModuleBuilder.CLRPropertyInfo)">
            <summary>
            Determines if another <see cref="T:LteDev.ModuleBuilder.CLRPropertyInfo"/> is the same instance as the current.
            </summary>
            <param name="other"><see cref="T:LteDev.ModuleBuilder.CLRPropertyInfo"/> object to compare.</param>
            <returns>true if <paramref name="other"/> is the same instance as the current <see cref="T:LteDev.ModuleBuilder.CLRPropertyInfo"/>; otherwise, false.</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CLRPropertyInfo.Equals(System.Reflection.PropertyInfo)">
            <summary>
            Determines if the current <see cref="T:LteDev.ModuleBuilder.CLRPropertyInfo"/> represents a <seealso cref="T:System.Reflection.PropertyInfo"/> object.
            </summary>
            <param name="other"><seealso cref="T:System.Reflection.PropertyInfo"/> object to compare.</param>
            <returns>True if the current <see cref="T:LteDev.ModuleBuilder.CLRPropertyInfo"/> represents the specified <seealso cref="T:System.Reflection.PropertyInfo"/> object; otherwise, false.</returns>
        </member>
        <member name="T:LteDev.ModuleBuilder.CmdInfoAggregate">
            <summary>
            Aggregates information about a PowerShell command
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.Module">
            <summary>
            Aggregate information about the module to which the command belongs.
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.Command">
            <summary>
            The PowerShell command being represented by this object.
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.Parameters">
            <summary>
            Represents all parameters of the associated command.
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.ParameterSets">
            <summary>
            Parameter sets of the current command
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.Aliases">
            <summary>
            Exported aliases of the current command
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.ReturnValues">
            <summary>
            Return values for the current command
            </summary>
        </member>
        <member name="P:LteDev.ModuleBuilder.CmdInfoAggregate.MamlCommandHelpInfo">
            <summary>
            Command help object
            </summary>
            <remarks>Source code which generates this object can be found at https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/help/HelpInfo.cs.</remarks>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.#ctor(System.Management.Automation.CommandInfo,LteDev.ModuleBuilder.ModuleInfoAggregate)">
            <summary>
            Initializes a new instance of the <see cref="T:LteDev.ModuleBuilder.CmdInfoAggregate" /> object.
            </summary>
            <param name="command">The PowerShell command being represented by this object.</param>
            <param name="module">Aggregate information about the module to which the command belongs.</param>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.CreateCmdParamInfoAggregate(System.Management.Automation.ParameterMetadata)">
            <summary>
            This gets invoked to create an object which contains aggregate information about a command parameter.
            </summary>
            <remarks></remarks>
            <param name="parameterMetadata">Metadata object which describes the parameter.</param>
            <returns>An object which contains aggregate information about a command parameter.</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.CreateParameterSetAggregate(System.Management.Automation.CommandParameterSetInfo)">
            <summary>
            This gets invoked to create an object which contains aggregate information about a parameter set.
            </summary>
            <param name="parameterSet">Parameter set to be represented.</param>
            <returns>An object which contains aggregate information about a parameter set.</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.CreateParameterSetParamInfoAggregate(System.Management.Automation.CommandParameterInfo,LteDev.ModuleBuilder.ParameterSetAggregate)">
            <summary>
            This gets invoked to create an object which contains aggregate information about a parameter in a particular parameter set.
            </summary>
            <param name="parameter">Parameter to be represented.</param>
            <param name="parameterSet">Aggregated parameter set information.</param>
            <returns>An object which contains aggregate information about a parameter in a particular parameter set.</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.CreateCommandHelp">
            <summary>
            Creates help command element.
            </summary>
            <returns>A command PSMAML element</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.GetNotes">
            <summary>
            Gets notes.
            </summary>
            <returns><see cref="P:LteDev.ModuleBuilder.InformationAggregator.maml.alertSet"/> elements for current command.</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.GetExamples">
            <summary>
            Gets examples for current command.
            </summary>
            <returns>example elements for current command</returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.CmdInfoAggregate.GetRelatedNavigationLinks">
            <summary>
            Gets related links.
            </summary>
            <returns><see cref="P:LteDev.ModuleBuilder.InformationAggregator.maml.navigationLink"/> elements for current command.</returns>
        </member>
        <member name="T:LteDev.ModuleBuilder.InformationAggregator">
            <summary>
            Base class for objects which aggregate module information.
            </summary>
        </member>
        <member name="F:LteDev.ModuleBuilder.InformationAggregator.NS_command">
            <summary>
            Namespace for the PSMaml Command schema
            </summary>
        </member>
        <member name="F:LteDev.ModuleBuilder.InformationAggregator.maml.NS">
            <summary>
            Namespace for the PSMaml Maml schema
            </summary>
        </member>
        <member name="F:LteDev.ModuleBuilder.InformationAggregator.dev.NS">
            <summary>
            Namespace for the PSMaml Dev schema
            </summary>
        </member>
        <member name="F:LteDev.ModuleBuilder.InformationAggregator.NS_MSHelp">
            <summary>
            Namespace for the PSMaml PSHelp schema
            </summary>
        </member>
        <member name="F:LteDev.ModuleBuilder.InformationAggregator.NS_msh">
            <summary>
            Namespace for the PSMaml root schema
            </summary>
        </member>
        <member name="M:LteDev.ModuleBuilder.InformationAggregator.ExtractTextForHelpProperty(System.Management.Automation.PSObject,System.String)">
            <summary>
            Extracts text for a given property from the full help object.
            </summary>
            <param name="psObject">FullHelp object</param>
            <param name="propertyName">
            Name of the property for which text needs to be extracted.
            </param>
            <returns></returns>
        </member>
        <member name="M:LteDev.ModuleBuilder.InformationAggregator.ExtractText(System.Management.Automation.PSObject)">
            <summary>
            Given a PSObject, this method will traverse through the objects properties,
            extracts content from properties that are of type System.String, appends them
            together and returns.
            </summary>
            <param name="psObject"></param>
            <returns></returns>
        </member>
        <member name="T:LteDev.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:LteDev.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:LteDev.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:LteDev.PSMamlHelper">
            <summary>
            Helper class for generating PSMaml Help
            </summary>
        </member>
        <member name="M:LteDev.PSMamlHelper.ValidateUriString(System.String,System.String,System.Boolean)">
            <summary>
            Ensures string values represent a valid absolute URI string.
            </summary>
            <param name="baseUriOrPath">The base URI or path.</param>
            <param name="relativePathOrUri">The relative path or URI to add to the base URI.</param>
            <param name="doNotResolveLocalPaths">If <c>true</c>, <seealso cref="M:System.IO.Path.GetFullPath(System.String)"/> is not invoked for strings which represent local paths.</param>
            <returns>If <paramref name="baseUriOrPath"/> and <paramref name="relativePathOrUri"/> are both null or empty, an empty string is returned.
            Otherwise, <paramref name="baseUriOrPath"/>, with <paramref name="relativePathOrUri"/> appended, is returned as a valid absolute URI string.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="baseUriOrPath"/> or <paramref name="relativePathOrUri"/> is not an absolute URI string and is not a format that can be converted to an absolute URI string.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.ValidateUriString(System.String,System.Boolean)">
            <summary>
            Ensures that a string is a valid absolute URI string.
            </summary>
            <param name="uriOrPath">A URI or path string.</param>
            <param name="doNotResolveLocalPaths">If <c>true</c>, <seealso cref="M:System.IO.Path.GetFullPath(System.String)"/> is not invoked for strings which represent local paths.</param>
            <returns>If <paramref name="uriOrPath"/> is null or empty, and empty string is returned.
            Otherwise, if <paramref name="uriOrPath"/> is not a valid absolute URI string, it is converted to an absolute URI string.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="uriOrPath"/> is not an absolute URI string and is not a format that can be converted to an absolute URI string.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.AsAbsoluteUri(System.String,System.String,System.Boolean)">
            <summary>
            Converts string values to an absolute URI.
            </summary>
            <param name="baseUriOrPath">The base URI or path.</param>
            <param name="relativePathOrUri">The relative path or URI to add to the base URI.</param>
            <param name="doNotResolveLocalPaths">If <c>true</c>, <seealso cref="M:System.IO.Path.GetFullPath(System.String)"/> is not invoked for strings which represent local paths.</param>
            <returns>If <paramref name="baseUriOrPath"/> and <paramref name="relativePathOrUri"/> are both null or empty, an empty string is returned.
            Otherwise, <paramref name="baseUriOrPath"/>, with <paramref name="relativePathOrUri"/> appended, is returned as a valid absolute URI.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="baseUriOrPath"/> or <paramref name="relativePathOrUri"/> is not an absolute URI string and is not a format that can be converted to an absolute URI.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.AsAbsoluteUri(System.String,System.Boolean)">
            <summary>
            Converts a string to an absolute URI.
            </summary>
            <param name="uriOrPath">A URI or path string.</param>
            <param name="doNotResolveLocalPaths">If <c>true</c>, <seealso cref="M:System.IO.Path.GetFullPath(System.String)"/> is not invoked for strings which represent local paths.</param>
            <returns>If <paramref name="uriOrPath"/> is null or empty, an empty string is returned.
            Otherwise, if <paramref name="uriOrPath"/> is not a valid absolute URI string, it is converted to an absolute URI string.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="uriOrPath"/> is not an absolute URI string and is not a format that can be converted to an absolute URI.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.HasNonWsTextOrElementNode(System.Xml.Linq.XElement)">
            <summary>
            Determines if element contains non-whitespace text or at least one element.
            </summary>
            <param name="element">Element to check.</param>
            <returns><c>true</c> if <paramref name="element"/> contains at least one non-whitespace text node or child element;
            otherwise, <c>false</c> to indicate that <paramref name="element"/> has no elements or non-whitespace text nodes..</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.HasNonWhitespaceTextNode(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Determines if element contains at least one non-whitespace text node.
            </summary>
            <param name="element">Element to check.</param>
            <param name="recursive">If <c>true</c>, child elements will be checked as well; otherwise, false to just check current element.</param>
            <returns><c>true</c> if <paramref name="element"/> contains at least one non-whitespace text node;
            otherwise, <c>false</c> to indicate that <paramref name="element"/> has no non-whitespace text nodes..</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.IsTextOnlyMatching(System.Xml.Linq.XElement,System.String)">
            <summary>
            Determins if an element contains only text, which matches the given text.
            </summary>
            <param name="element">Element to check.</param>
            <param name="text">Text to match.</param>
            <returns><c>true</c> if <paramref name="element"/> contains no elements and only one non-whitespace text node that matches <paramref name="text"/>;
            otherwise, false to indicate that either <paramref name="element"/> was null, it had at least one element,
            or no text nodes are non-whitespace which match <paramref name="text"/>.</returns>
            <remarks>If this <paramref name="text"/> is <c>null</c>, this this will test whether <paramref name="element"/> is null.</remarks>
        </member>
        <member name="M:LteDev.PSMamlHelper.NameEquals(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
            <summary>
            Determines if any element name matches a specific <seealso cref="T:System.Xml.Linq.XName"/>.
            </summary>
            <param name="element">Element to check.</param>
            <param name="name">Name to match.</param>
            <returns><c>true</c> if the name of <paramref name="element"/> matches <paramref name="name"/>; otherwise, false.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.InsertElement(System.Xml.Linq.XName,System.Boolean,System.Xml.Linq.XElement,System.Object[])">
            <summary>
            Inserts new <seealso cref="T:System.Xml.Linq.XElement"/> element next to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="name">Name of <seealso cref="T:System.Xml.Linq.XElement"/> to be added.</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="before">If <c>true</c>, new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted before <paramref name="refNode"/>;
            otherwise, new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted after <paramref name="refNode"/>.</param>
            <param name="content">Optional content to be added to new <seealso cref="T:System.Xml.Linq.XElement"/>.</param>
            <returns>Newly created <seealso cref="T:System.Xml.Linq.XElement"/> inserted into parent element of <paramref name="refNode"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.InsertElement(System.Xml.Linq.XName,System.Xml.Linq.XElement,System.Object[])">
            <summary>
            Inserts new <seealso cref="T:System.Xml.Linq.XElement"/> after another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="name">Name of <seealso cref="T:System.Xml.Linq.XElement"/> to be added.</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="content">Optional content to be added to new <seealso cref="T:System.Xml.Linq.XElement"/>.</param>
            <returns>Newly created <seealso cref="T:System.Xml.Linq.XElement"/> inserted into parent element of <paramref name="refNode"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddElement(System.Xml.Linq.XElement,System.Boolean,System.Xml.Linq.XName,System.Object[])">
            <summary>
            Adds a new <seealso cref="T:System.Xml.Linq.XElement"/> to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="addFirst">If <c>true</c>, new element is inserted as the first child of <paramref name="parent"/>;
            otherwise, it is added as the last element of <paramref name="parent"/>.</param>
            <param name="name">Name of <seealso cref="T:System.Xml.Linq.XElement"/> to be added.</param>
            <param name="content"></param>
            <returns>Newly created <seealso cref="T:System.Xml.Linq.XElement"/> added to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Object[])">
            <summary>
            Appends a new <seealso cref="T:System.Xml.Linq.XElement"/> to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="name">Name of <seealso cref="T:System.Xml.Linq.XElement"/> to be added.</param>
            <param name="content">Content to be added to new <seealso cref="T:System.Xml.Linq.XElement"/>.</param>
            <returns>Newly created <seealso cref="T:System.Xml.Linq.XElement"/> appended to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddCommandElement(System.Xml.Linq.XElement,System.Boolean,System.String,System.Object[])">
            <summary>
            Adds a command element to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child command <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="addFirst">If <c>true</c>, new command element is inserted as the first child node of <paramref name="parent"/>;
            otherwise, new command element is appended as the last child node of <paramref name="parent"/>.</param>
            <param name="localName">Local name of command element.</param>
            <param name="content">Nodes to be appended to the new command element.</param>
            <returns>Newly created command <seealso cref="T:System.Xml.Linq.XElement"/> added to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddMamlElement(System.Xml.Linq.XElement,System.Boolean,System.String,System.Object[])">
            <summary>
            Adds a maml element to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child maml <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="addFirst">If <c>true</c>, new maml element is inserted as the first child node of <paramref name="parent"/>;
            otherwise, new maml element is appended as the last child node of <paramref name="parent"/>.</param>
            <param name="localName">Local name of maml element.</param>
            <param name="content">Nodes to be appended to the new maml element.</param>
            <returns>Newly created maml <seealso cref="T:System.Xml.Linq.XElement"/> added to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddDevElement(System.Xml.Linq.XElement,System.Boolean,System.String,System.Object[])">
            <summary>
            Adds a dev element to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child dev <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="addFirst">If <c>true</c>, new dev element is inserted as the first child node of <paramref name="parent"/>;
            otherwise, new dev element is appended as the last child node of <paramref name="parent"/>.</param>
            <param name="localName">Local name of dev element.</param>
            <param name="content">Nodes to be appended to the new dev element.</param>
            <returns>Newly created dev <seealso cref="T:System.Xml.Linq.XElement"/> added to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddCommandElement(System.Xml.Linq.XElement,System.String,System.Object[])">
            <summary>
            Appends a command element to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child command <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="localName">Local name of command element.</param>
            <param name="content">Nodes to be appended to the new command element.</param>
            <returns>Newly created command <seealso cref="T:System.Xml.Linq.XElement"/> appended to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddMamlElement(System.Xml.Linq.XElement,System.String,System.Object[])">
            <summary>
            Appends a maml element to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child maml <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="localName">Local name of maml element.</param>
            <param name="content">Nodes to be appended to the new maml element.</param>
            <returns>Newly created maml <seealso cref="T:System.Xml.Linq.XElement"/> appended to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.AddDevElement(System.Xml.Linq.XElement,System.String,System.Object[])">
            <summary>
            Appends a dev element to another <seealso cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="parent">Parent <seealso cref="T:System.Xml.Linq.XElement"/> to add new child dev <seealso cref="T:System.Xml.Linq.XElement"/> to.</param>
            <param name="localName">Local name of dev element.</param>
            <param name="content">Nodes to be appended to the new dev element.</param>
            <returns>Newly created dev <seealso cref="T:System.Xml.Linq.XElement"/> appended to <paramref name="parent"/>.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XNamespace,System.String,System.Xml.Linq.XNode,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="ns">Namespace of element to search for.</param>
            <param name="localName">Local name of lement to search for</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="ns"/>, <paramref name="localName"/>, <paramref name="refNode"/>, or <paramref name="predicate"/> was null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="localName"/> was empty.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XName,System.Xml.Linq.XNode,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="name">Name of element to search for.</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>, <paramref name="refNode"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XNamespace,System.String,System.Xml.Linq.XNode,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="ns">Namespace of element to search for.</param>
            <param name="localName">Local name of lement to search for</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="ns"/>, <paramref name="localName"/>, <paramref name="refNode"/>, or <paramref name="predicate"/> was null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="localName"/> was empty.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XName,System.Xml.Linq.XNode,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="name">Name of element to search for.</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>, <paramref name="refNode"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XNamespace,System.String,System.Xml.Linq.XNode,System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="ns">Namespace of element to search for.</param>
            <param name="localName">Local name of lement to search for</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="ns"/>, <paramref name="localName"/>, or <paramref name="refNode"/> was null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="localName"/> was empty.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XName,System.Xml.Linq.XNode,System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="name">Name of element to search for.</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/> or <paramref name="refNode"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>. The default value is <c>false</c>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XNamespace,System.String,System.Xml.Linq.XNode,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="ns">Namespace of element to search for.</param>
            <param name="localName">Local name of lement to search for</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="ns"/>, <paramref name="localName"/>, <paramref name="refNode"/>, or <paramref name="predicate"/> was null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="localName"/> was empty.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XName,System.Xml.Linq.XNode,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or inserts a new one if none is found.
            </summary>
            <param name="name">Name of element to search for.</param>
            <param name="refNode">Reference <seealso cref="T:System.Xml.Linq.XNode"/> which determines where any new <seealso cref="T:System.Xml.Linq.XElement"/> will be inserted.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addBefore">If <c>true</c>, and a new element is created, it is inserted before <paramref name="refNode"/>;
            otherwise, any new element is inserted after <paramref name="refNode"/>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>, <paramref name="refNode"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureElement(System.Xml.Linq.XElement,System.Xml.Linq.XName,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>. The default value is <c>false</c>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching command element or appends a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Xml.Linq.XName[])">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureCommandElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching command element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching maml element or appends a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>. The default value is <c>false</c>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Xml.Linq.XName[])">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureMamlElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching maml element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of maml element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Boolean,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>. The default value is <c>false</c>.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Action{System.Xml.Linq.XElement},System.Action{System.Xml.Linq.XElement})">
            <summary>
            Gets first matching dev element or appends a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of command element to search for.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="onExists"><seealso cref="T:System.Action`1"/> which gets invoked when a matching <seealso cref="T:System.Xml.Linq.XElement"/> is about to be returned.
            This can be <c>null</c>.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> or <paramref name="name"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Boolean,System.Xml.Linq.XName[])">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="addFirst">If <c>true</c>, and a new element is created, it is inserted as the first child of <paramref name="parent"/>;
            otherwise, any new element is added as the last child of <paramref name="parent"/>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Action{System.Xml.Linq.XElement},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="onNew"><seealso cref="T:System.Action`1"/> which gets invoked when a new <seealso cref="T:System.Xml.Linq.XElement"/> is inserted.
            This can be <c>null</c>.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.EnsureDevElement(System.Xml.Linq.XElement,System.String,System.Func{System.Xml.Linq.XElement,System.Boolean},System.Xml.Linq.XName[])">
            <summary>
            Gets first matching dev element or adds a new one if none is found.
            </summary>
            <param name="parent">Parent element.</param>
            <param name="name">Name of dev element to search for.</param>
            <param name="predicate">Predicate which gets invoked to determine if element is a match.</param>
            <param name="predicateNames">Additional nested child element names to search when looking for matches. The nested child element matching the last
            <seealso cref="T:System.Xml.Linq.XName"/> is passed to <paramref name="predicate"/> to determine if it is a match.</param>
            <returns>The first matching <seealso cref="T:System.Xml.Linq.XElement"/> if a match is found; otherwise, the newly inserted <seealso cref="T:System.Xml.Linq.XElement"/> is returned.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/>, <paramref name="name"/>, or <paramref name="predicate"/> was null.</exception>
        </member>
        <member name="M:LteDev.PSMamlHelper.ImportCommandElement(System.Xml.Linq.XElement,System.Management.Automation.CommandInfo,System.Boolean)">
            <summary>
            Imports help information for command.
            </summary>
            <param name="helpItems">Parent element containing command elements.</param>
            <param name="commandInfo">Command to import.</param>
            <param name="overWrite"><c>true</c> to overwrite existing information; otherwise, false to only import missing information.</param>
            <returns><seealso cref="T:System.Xml.Linq.XElement"/> representing PSMaml Help for command.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.GetVersion(System.Management.Automation.CommandInfo)">
            <summary>
            Gets version for command.
            </summary>
            <param name="commandInfo">Command from which to get version.</param>
            <returns>Version for command.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.GetVersion(System.Reflection.Assembly)">
            <summary>
            Get assembly version.
            </summary>
            <param name="assembly">Assemly from which to get version.</param>
            <returns>Version of assembly.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.GetCopyright(System.Management.Automation.CommandInfo)">
            <summary>
            Get copyright for command.
            </summary>
            <param name="commandInfo">Command from which to get copyright.</param>
            <returns>Copyright associated with command.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.GetCopyright(System.Reflection.Assembly)">
            <summary>
            Get assembly copyright.
            </summary>
            <param name="assembly">Assemly from which to get copyright.</param>
            <returns>Copyright of assembly.</returns>
        </member>
        <member name="M:LteDev.PSMamlHelper.GetCommandElement(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets PSMaml element associated with command.
            </summary>
            <param name="helpItems">Parent element of command elements.</param>
            <param name="name">Name of command.</param>
            <returns><seealso cref="T:System.Xml.Linq.XElement"/> representing PSMaml Help for command. Returns <c>null</c> if matching element not found.</returns>
        </member>
        <member name="T:LteDev.TypeBrowser.AssemblyDetailVM">
            <summary>
            Represents an <seealso cref="T:System.Reflection.Assembly" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyDetailVM.PropertyName_ExportedTypes">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyDetailVM.ExportedTypes"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyDetailVM.ExportedTypesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyDetailVM.ExportedTypes"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyDetailVM.ExportedTypes">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.ExportedTypes"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyDetailVM.PropertyName_CustomAttributes">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyDetailVM.CustomAttributes"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyDetailVM.CustomAttributesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyDetailVM.CustomAttributes"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyDetailVM.CustomAttributes">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.CustomAttributes"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyDetailVM.PropertyName_ReferencedAssemblies">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyDetailVM.ReferencedAssemblies"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyDetailVM.ReferencedAssembliesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyDetailVM.ReferencedAssemblies"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyDetailVM.ReferencedAssemblies">
            <summary>
            Value of the model property <seealso cref="!:Type.ElementType"/> or <seealso cref="P:System.Type.UnderlyingSystemType"/>.
            </summary>
        </member>
        <member name="T:LteDev.TypeBrowser.AssemblyListItemVM">
            <summary>
            Represents an <seealso cref="T:System.Reflection.Assembly" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.PropertyName_IsFullyTrusted">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.IsFullyTrusted"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.IsFullyTrustedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.IsFullyTrusted"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyListItemVM.IsFullyTrusted">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.IsFullyTrusted"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.PropertyName_Location">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.Location"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.LocationProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.Location"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyListItemVM.Location">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.Location"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.PropertyName_ImageRuntimeVersion">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.ImageRuntimeVersion"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.ImageRuntimeVersionProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.ImageRuntimeVersion"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyListItemVM.ImageRuntimeVersion">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.ImageRuntimeVersion"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.PropertyName_GlobalAssemblyCache">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.GlobalAssemblyCache"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyListItemVM.GlobalAssemblyCacheProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyListItemVM.GlobalAssemblyCache"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyListItemVM.GlobalAssemblyCache">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.GlobalAssemblyCache"/>.
            </summary>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyListItemVM.#ctor">
            <summary>
            Initializes a new <see cref="T:LteDev.TypeBrowser.AssemblyListItemVM" />.
            </summary>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyListItemVM.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new <see cref="T:LteDev.TypeBrowser.AssemblyListItemVM" />.
            </summary>
            <param name="model">The <seealso cref="T:System.Reflection.Assembly" /> that the view model is to represent.</param>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyListItemVM.#ctor(LteDev.TypeBrowser.AssemblyListItemVM)">
            <summary>
            Initializes a new <see cref="T:LteDev.TypeBrowser.AssemblyListItemVM" />.
            </summary>
            <param name="model">The <seealso cref="T:System.Reflection.Assembly" /> that the view model is to represent.</param>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyListItemVM.GetModel">
            <summary>
            Gets the <seealso cref="T:System.Reflection.Assembly" /> that this view model represents.
            </summary>
            <returns>The <seealso cref="T:System.Reflection.Assembly" /> that this view model represents.</returns>
        </member>
        <member name="T:LteDev.TypeBrowser.AssemblyNameListItemVM">
            <summary>
            Represents an <seealso cref="T:System.Reflection.Assembly" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.PropertyName_CodeBase">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.CodeBase"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.CodeBaseProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.CodeBase"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyNameListItemVM.CodeBase">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.CodeBase"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.PropertyName_FullName">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.FullName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.FullNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.FullName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyNameListItemVM.FullName">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.FullName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.PropertyName_Name">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.NameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Name">
            <summary>
            Value of the <seealso cref="P:System.Reflection.AssemblyName.Name"/> property taken from <seealso cref="M:System.Reflection.Assembly.GetName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.PropertyName_Version">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Version"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.VersionProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Version"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Version">
            <summary>
            Value of the <seealso cref="P:System.Reflection.AssemblyName.Version"/> property taken from <seealso cref="M:System.Reflection.Assembly.GetName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.PropertyName_Culture">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Culture"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.CultureProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Culture"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyNameListItemVM.Culture">
            <summary>
            Value of the <seealso cref="P:System.Reflection.AssemblyName.CultureName"/> property taken from <seealso cref="M:System.Reflection.Assembly.GetName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.PropertyName_ProcessorArchitecture">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.ProcessorArchitecture"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.AssemblyNameListItemVM.ProcessorArchitectureProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.AssemblyNameListItemVM.ProcessorArchitecture"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.AssemblyNameListItemVM.ProcessorArchitecture">
            <summary>
            Value of the <seealso cref="P:System.Reflection.AssemblyName.ProcessorArchitecture"/> property taken from <seealso cref="M:System.Reflection.Assembly.GetName"/>.
            </summary>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyNameListItemVM.#ctor">
            <summary>
            Initializes a new <see cref="T:LteDev.TypeBrowser.AssemblyNameListItemVM" />.
            </summary>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyNameListItemVM.#ctor(System.Reflection.AssemblyName)">
            <summary>
            Initializes a new <see cref="T:LteDev.TypeBrowser.AssemblyNameListItemVM" />.
            </summary>
            <param name="model">The <seealso cref="T:System.Reflection.Assembly" /> that the view model is to represent.</param>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyNameListItemVM.#ctor(LteDev.TypeBrowser.AssemblyNameListItemVM)">
            <summary>
            Initializes a new <see cref="T:LteDev.TypeBrowser.AssemblyNameListItemVM" />.
            </summary>
            <param name="model">The <seealso cref="T:System.Reflection.Assembly" /> that the view model is to represent.</param>
        </member>
        <member name="M:LteDev.TypeBrowser.AssemblyNameListItemVM.GetName">
            <summary>
            Gets the <seealso cref="T:System.Reflection.Assembly" /> that this view model represents.
            </summary>
            <returns>The <seealso cref="T:System.Reflection.Assembly" /> that this view model represents.</returns>
        </member>
        <member name="T:LteDev.TypeBrowser.CustomAttributeVM">
            <summary>
            Represents an <seealso cref="T:System.Attribute" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.CustomAttributeVM.PropertyName_TypeName">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.CustomAttributeVM.TypeName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.CustomAttributeVM.TypeNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.CustomAttributeVM.TypeName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.CustomAttributeVM.TypeName">
            <summary>
            Value of the model property <seealso cref="!:TypeName.TypeName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.CustomAttributeVM.PropertyName_Values">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.CustomAttributeVM.Values"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.CustomAttributeVM.ValuesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.CustomAttributeVM.Values"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.CustomAttributeVM.Values">
            <summary>
            Value of the model property <seealso cref="!:Type.Values"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.CustomAttributeVM.PropertyName_Properties">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.CustomAttributeVM.Properties"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.CustomAttributeVM.PropertiesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.CustomAttributeVM.Properties"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.CustomAttributeVM.Properties">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Properties"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.FieldListItemVM.PropertyName_Access">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.FieldListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.FieldListItemVM.AccessProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.FieldListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.FieldListItemVM.Access">
            <summary>
            Value of the model property <seealso cref="!:Type.Access"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.FieldListItemVM.PropertyName_IsInitOnly">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.FieldListItemVM.IsInitOnly"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.FieldListItemVM.IsInitOnlyProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.FieldListItemVM.IsInitOnly"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.FieldListItemVM.IsInitOnly">
            <summary>
            Value of the model property <seealso cref="!:Type.IsInitOnly"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.FieldListItemVM.PropertyName_IsLiteral">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.FieldListItemVM.IsLiteral"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.FieldListItemVM.IsLiteralProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.FieldListItemVM.IsLiteral"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.FieldListItemVM.IsLiteral">
            <summary>
            Value of the model property <seealso cref="!:Type.IsLiteral"/>.
            </summary>
        </member>
        <member name="T:LteDev.TypeBrowser.MemberListItemVM">
            <summary>
            Represents a <seealso cref="T:System.Reflection.PropertyInfo" /> or <seealso cref="T:System.Reflection.FieldInfo" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.PropertyName_Name">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.NameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberListItemVM.Name">
            <summary>
            Value of the model property <seealso cref="!:Type.Name"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.PropertyName_MemberType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.MemberType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.MemberTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.MemberType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberListItemVM.MemberType">
            <summary>
            Value of the model property <seealso cref="M:System.Type.#ctor"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.PropertyName_IsPublic">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.IsPublic"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.IsPublicProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.IsPublic"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberListItemVM.IsPublic">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsPublic"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.PropertyName_IsReadOnly">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.IsReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.IsReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberListItemVM.IsReadOnly">
            <summary>
            Value of the model property <seealso cref="!:Type.IsReadOnly"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.PropertyName_IsStatic">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.IsStatic"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberListItemVM.IsStaticProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberListItemVM.IsStatic"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberListItemVM.IsStatic">
            <summary>
            Value of the model property <seealso cref="!:Type.IsStatic"/>.
            </summary>
        </member>
        <member name="T:LteDev.TypeBrowser.MemberValueVM">
            <summary>
            Represents an <seealso cref="T:System.Attribute" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberValueVM.PropertyName_Value">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberValueVM.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberValueVM.ValueProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberValueVM.Value"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberValueVM.Value">
            <summary>
            Value of the model property <seealso cref="!:Type.Value"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberValueVM.PropertyName_ActualType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MemberValueVM.ActualType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MemberValueVM.ActualTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MemberValueVM.ActualType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MemberValueVM.ActualType">
            <summary>
            Value of the model property <seealso cref="!:Type.ActualType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.PropertyName_CustomAttributes">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.CustomAttributes"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.CustomAttributesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.CustomAttributes"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodBaseListItemVM.CustomAttributes">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.CustomAttributes"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.PropertyName_Parameters">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.Parameters"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.ParametersProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.Parameters"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodBaseListItemVM.Parameters">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Parameters"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.PropertyName_ParameterText">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.ParameterText"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.ParameterTextProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.ParameterText"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodBaseListItemVM.ParameterText">
            <summary>
            Value of the model property <seealso cref="!:Type.ParameterText"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.PropertyName_DeclaringType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.DeclaringType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.DeclaringTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.DeclaringType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodBaseListItemVM.DeclaringType">
            <summary>
            Value of the model property <seealso cref="P:System.Type.DeclaringType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.PropertyName_ReflectedType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.ReflectedType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.ReflectedTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.ReflectedType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodBaseListItemVM.ReflectedType">
            <summary>
            Value of the model property <seealso cref="P:System.Type.ReflectedType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.PropertyName_Access">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodBaseListItemVM.AccessProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodBaseListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodBaseListItemVM.Access">
            <summary>
            Value of the model property <seealso cref="!:Type.Access"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.PropertyName_GenericTypeArguments">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.GenericTypeArguments"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.GenericTypeArgumentsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.GenericTypeArguments"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodListItemVM.GenericTypeArguments">
            <summary>
            Value of the model property <seealso cref="P:System.Type.GenericTypeArguments"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.PropertyName_GenericType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.GenericType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.GenericTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.GenericType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodListItemVM.GenericType">
            <summary>
            Whether it is a generic type definition or a constructed generic type.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.PropertyName_Name">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.NameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodListItemVM.Name">
            <summary>
            Value of the model property <seealso cref="!:Type.Name"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.PropertyName_IsStatic">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.IsStatic"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.IsStaticProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.IsStatic"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodListItemVM.IsStatic">
            <summary>
            Value of the model property <seealso cref="!:Type.IsStatic"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.PropertyName_Modifier">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.Modifier"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.MethodListItemVM.ModifierProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.MethodListItemVM.Modifier"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.MethodListItemVM.Modifier">
            <summary>
            Value of the model properties <seealso cref="P:System.Type.IsSealed"/> or <seealso cref="P:System.Type.IsAbstract"/>.
            </summary>
        </member>
        <member name="T:LteDev.TypeBrowser.ParameterListItemVM">
            <summary>
            Represents a <seealso cref="T:System.Reflection.ParameterInfo" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_Name">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.NameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.Name">
            <summary>
            Value of the model property <seealso cref="!:Type.Name"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_DefaultValue">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.DefaultValue"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.DefaultValueProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.DefaultValue"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.DefaultValue">
            <summary>
            Value of the model property <seealso cref="!:Type.ElementType"/> or <seealso cref="P:System.Type.UnderlyingSystemType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_ParameterType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.ParameterType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.ParameterTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.ParameterType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.ParameterType">
            <summary>
            Value of the model property <seealso cref="!:Type.ElementType"/> or <seealso cref="P:System.Type.UnderlyingSystemType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_IsIn">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsIn"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.IsInProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsIn"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.IsIn">
            <summary>
            Value of the model property <seealso cref="!:Type.IsIn"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_IsOut">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsOut"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.IsOutProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsOut"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.IsOut">
            <summary>
            Value of the model property <seealso cref="!:Type.IsOut"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_IsRetval">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsRetval"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.IsRetvalProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsRetval"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.IsRetval">
            <summary>
            Value of the model property <seealso cref="!:Type.IsRetval"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_IsOptional">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsOptional"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.IsOptionalProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.IsOptional"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.IsOptional">
            <summary>
            Value of the model property <seealso cref="!:Type.IsOptional"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PropertyName_Position">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.Position"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.ParameterListItemVM.PositionProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.ParameterListItemVM.Position"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.ParameterListItemVM.Position">
            <summary>
            Value of the model property <seealso cref="!:Type.Position"/>.
            </summary>
        </member>
        <member name="T:LteDev.TypeBrowser.PropertyListItemVM">
            <summary>
            Represents a <seealso cref="T:System.Reflection.PropertyInfo" />.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.PropertyName_GetAccess">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.GetAccess"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.GetAccessProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.GetAccess"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.PropertyListItemVM.GetAccess">
            <summary>
            Value of the model property <seealso cref="!:Type.GetAccess"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.PropertyName_SetAccess">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.SetAccess"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.SetAccessProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.SetAccess"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.PropertyListItemVM.SetAccess">
            <summary>
            Value of the model property <seealso cref="!:Type.SetAccess"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.PropertyName_Access">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.AccessProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.PropertyListItemVM.Access">
            <summary>
            Value of the model property <seealso cref="!:Type.Access"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.PropertyName_CanRead">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.CanRead"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.CanReadProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.CanRead"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.PropertyListItemVM.CanRead">
            <summary>
            Value of the model property <seealso cref="!:Type.CanRead"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.PropertyName_CanWrite">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.CanWrite"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.CanWriteProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.CanWrite"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.PropertyListItemVM.CanWrite">
            <summary>
            Value of the model property <seealso cref="!:Type.CanWrite"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.PropertyName_Modifier">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.Modifier"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.PropertyListItemVM.ModifierProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.PropertyListItemVM.Modifier"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.PropertyListItemVM.Modifier">
            <summary>
            Value of the model properties <seealso cref="P:System.Type.IsSealed"/> or <seealso cref="P:System.Type.IsAbstract"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_NestedTypes">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.NestedTypes"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.NestedTypesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.NestedTypes"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.NestedTypes">
            <summary>
            Value of the model property <seealso cref="!:Assembly.NestedTypes"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_CustomAttributes">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.CustomAttributes"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.CustomAttributesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.CustomAttributes"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.CustomAttributes">
            <summary>
            Value of the model property <seealso cref="P:System.Reflection.Assembly.CustomAttributes"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_Interfaces">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Interfaces"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.InterfacesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Interfaces"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.Interfaces">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Interfaces"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_GenericArguments">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.GenericArguments"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.GenericArgumentsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.GenericArguments"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.GenericArguments">
            <summary>
            Value of the model property <seealso cref="!:Assembly.GenericArguments"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_GenericParameterConstraints">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.GenericParameterConstraints"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.GenericParameterConstraintsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.GenericParameterConstraints"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.GenericParameterConstraints">
            <summary>
            Value of the model property <seealso cref="!:Assembly.GenericParameterConstraints"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_Constructors">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Constructors"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.ConstructorsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Constructors"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.Constructors">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Constructors"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_Fields">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Fields"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.FieldsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Fields"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.Fields">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Fields"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_Properties">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Properties"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertiesProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Properties"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.Properties">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Properties"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_Events">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Events"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.EventsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Events"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.Events">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Events"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.PropertyName_Methods">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Methods"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeDetailVM.MethodsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeDetailVM.Methods"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeDetailVM.Methods">
            <summary>
            Value of the model property <seealso cref="!:Assembly.Methods"/>.
            </summary>
        </member>
        <member name="M:LteDev.TypeBrowser.TypeListItemVM.ToCSharpTypeName(System.String,System.String[])">
            <summary>
            Converts a type name to c# code.
            </summary>
            <param cref="!:typeName">The name of <seealso cref="T:System.Type" /> (can be full name or assembly qualified name).</param>
            <returns>Text which can be used as a type specification in c#.</returns>
        </member>
        <member name="M:LteDev.TypeBrowser.TypeListItemVM.ToPSTypeName(System.String)">
            <summary>
            Converts a type name to PowerShell code.
            </summary>
            <param cref="!:typeName">The name of <seealso cref="T:System.Type" /> (can be full name or assembly qualified name).</param>
            <returns>Text which can be used as a type specification in PowerShell.</returns>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_DeclaringType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.DeclaringType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.DeclaringTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.DeclaringType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.DeclaringType">
            <summary>
            Value of the model property <seealso cref="P:System.Type.DeclaringType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_DeclaringMethod">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.DeclaringMethod"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.DeclaringMethodProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.DeclaringMethod"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.DeclaringMethod">
            <summary>
            Value of the model property <seealso cref="P:System.Type.DeclaringMethod"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Module">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Module"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.ModuleProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Module"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Module">
            <summary>
            Value of the model property <seealso cref="P:System.Type.Module"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Assembly">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Assembly"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.AssemblyProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Assembly"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Assembly">
            <summary>
            Value of the model property <seealso cref="P:System.Type.Assembly"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_FullName">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.FullName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.FullNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.FullName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.FullName">
            <summary>
            Value of the model property <seealso cref="P:System.Type.FullName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Namespace">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Namespace"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.NamespaceProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Namespace"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Namespace">
            <summary>
            Value of the model property <seealso cref="P:System.Type.Namespace"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_AssemblyQualifiedName">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.AssemblyQualifiedName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.AssemblyQualifiedNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.AssemblyQualifiedName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.AssemblyQualifiedName">
            <summary>
            Value of the model property <seealso cref="P:System.Type.AssemblyQualifiedName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_BaseType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.BaseType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.BaseTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.BaseType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.BaseType">
            <summary>
            Value of the model property <seealso cref="P:System.Type.BaseType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsNested">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsNested"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsNestedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsNested"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsNested">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsNested"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsVisible">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsVisibleProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsVisible"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsVisible">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsVisible"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Access">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.AccessProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Access"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Access">
            <summary>
            Value of the model property <seealso cref="!:Type.Access"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_StructLayout">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.StructLayout"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.StructLayoutProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.StructLayout"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.StructLayout">
            <summary>
            Value of the model property <seealso cref="!:Type.StructLayout"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Kind">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Kind"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.KindProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Kind"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Kind">
            <summary>
            Whether type is a struct, class or interface
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Modifier">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Modifier"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.ModifierProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Modifier"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Modifier">
            <summary>
            Value of the model properties <seealso cref="P:System.Type.IsSealed"/> or <seealso cref="P:System.Type.IsAbstract"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsSpecialName">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSpecialName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsSpecialNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSpecialName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsSpecialName">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsSpecialName"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsImport">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsImport"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsImportProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsImport"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsImport">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsImport"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsSerializable">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSerializable"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsSerializableProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSerializable"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsSerializable">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsSerializable"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_ClassSpec">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.ClassSpec"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.ClassSpecProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.ClassSpec"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.ClassSpec">
            <summary>
            Value of the model property <seealso cref="!:Type.ClassSpec"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_ElementRef">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.ElementRef"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.ElementRefProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.ElementRef"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.ElementRef">
            <summary>
            Value of the model property <seealso cref="!:Type.ElementRef"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_GenericType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.GenericType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.GenericTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.GenericType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.GenericType">
            <summary>
            Whether it is a generic type definition or a constructed generic type.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsGenericParameter">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsGenericParameter"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsGenericParameterProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsGenericParameter"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsGenericParameter">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsGenericParameter"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_GenericParameterPosition">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.GenericParameterPosition"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.GenericParameterPositionProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.GenericParameterPosition"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.GenericParameterPosition">
            <summary>
            Value of the model property <seealso cref="P:System.Type.GenericParameterPosition"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsPrimitive">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsPrimitive"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsPrimitiveProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsPrimitive"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsPrimitive">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsPrimitive"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsCOMObject">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsCOMObject"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsCOMObjectProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsCOMObject"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsCOMObject">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsCOMObject"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsContextful">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsContextful"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsContextfulProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsContextful"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsContextful">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsContextful"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsMarshalByRef">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsMarshalByRef"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsMarshalByRefProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsMarshalByRef"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsMarshalByRef">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsMarshalByRef"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_GenericTypeArguments">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.GenericTypeArguments"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.GenericTypeArgumentsProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.GenericTypeArguments"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.GenericTypeArguments">
            <summary>
            Value of the model property <seealso cref="P:System.Type.GenericTypeArguments"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsSecurityCritical">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSecurityCritical"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsSecurityCriticalProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSecurityCritical"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsSecurityCritical">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsSecurityCritical"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsSecuritySafeCritical">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSecuritySafeCritical"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsSecuritySafeCriticalProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSecuritySafeCritical"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsSecuritySafeCritical">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsSecuritySafeCritical"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_IsSecurityTransparent">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSecurityTransparent"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.IsSecurityTransparentProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.IsSecurityTransparent"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.IsSecurityTransparent">
            <summary>
            Value of the model property <seealso cref="P:System.Type.IsSecurityTransparent"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_UnderlyingType">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.UnderlyingType"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.UnderlyingTypeProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.UnderlyingType"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.UnderlyingType">
            <summary>
            Value of the model property <seealso cref="!:Type.ElementType"/> or <seealso cref="P:System.Type.UnderlyingSystemType"/>.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.PropertyName_Name">
            <summary>
            Defines the name for the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.TypeBrowser.TypeListItemVM.NameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.TypeBrowser.TypeListItemVM.Name"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.TypeBrowser.TypeListItemVM.Name">
            <summary>
            Value of the model property <seealso cref="!:Type.Name"/>.
            </summary>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.DependencyPropertyName_ImpliedValue">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValueProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue">
            <summary>
            Indicates that the property is attached.
            </summary>
        </member>
        <member name="M:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue_PropertyChanged(`0,`0)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="!:T"/> value before the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue"/> property was changed.</param>
            <param name="newValue">The <seealso cref="!:T"/> value after the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ImpliedValue"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.DependencyPropertyName_ExplicitValue">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValueProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue">
            <summary>
            Property is read-only
            </summary>
        </member>
        <member name="M:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue_PropertyChanged(`0,`0)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="!:T"/> value before the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue"/> property was changed.</param>
            <param name="newValue">The <seealso cref="!:T"/> value after the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ExplicitValue"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.DependencyPropertyName_ActualValue">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValueProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue">
            <summary>
            Property is read-only
            </summary>
        </member>
        <member name="M:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue_PropertyChanged(`0,`0)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="!:T"/> value before the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue"/> property was changed.</param>
            <param name="newValue">The <seealso cref="!:T"/> value after the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.ActualValue"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.DependencyPropertyName_UseExplicit">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicitProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit">
            <summary>
            Property is read-only
            </summary>
        </member>
        <member name="M:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit_PropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="T:System.Boolean"/> value before the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit"/> property was changed.</param>
            <param name="newValue">The <seealso cref="T:System.Boolean"/> value after the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseExplicit"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.DependencyPropertyName_UseImplied">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.ImpliedAndExplicitVM`1.UseImpliedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied">
            <summary>
            Indicates that the property is attached.
            </summary>
        </member>
        <member name="M:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied_PropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="T:System.Boolean"/> value before the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied"/> property was changed.</param>
            <param name="newValue">The <seealso cref="T:System.Boolean"/> value after the <seealso cref="P:LteDev.WPF.ImpliedAndExplicitVM`1.UseImplied"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_OwnerClass">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.OwnerClass"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.OwnerClassProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.OwnerClass"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.OwnerClass">
            <summary>
            Type name of owner class
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_PropertyName">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.PropertyName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.PropertyName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.PropertyName">
            <summary>
            Name of property
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_PropertyTypeLabel">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.PropertyTypeLabel"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyTypeLabelProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.PropertyTypeLabel"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.PropertyTypeLabel">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_PropertyTypeName">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.PropertyTypeName"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyTypeNameProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.PropertyTypeName"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.PropertyTypeName">
            <summary>
            Type name of property
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_DefaultValueLiteral">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.DefaultValueLiteral"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DefaultValueLiteralProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.DefaultValueLiteral"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.DefaultValueLiteral">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_IsAttached">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsAttached"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.IsAttachedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsAttached"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.IsAttached">
            <summary>
            Indicates that the property is attached.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_IsReadOnly">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.IsReadOnly">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_CoerceNonNull">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.CoerceNonNull"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.CoerceNonNullProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.CoerceNonNull"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.CoerceNonNull">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_IsCollection">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsCollection"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.IsCollectionProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsCollection"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.IsCollection">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_IsReadOnlyCollection">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsReadOnlyCollection"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.IsReadOnlyCollectionProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.IsReadOnlyCollection"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.IsReadOnlyCollection">
            <summary>
            Indicates that the property is a read-only collection
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_HandlePropertyChanged">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.HandlePropertyChanged"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.HandlePropertyChangedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.HandlePropertyChanged"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.HandlePropertyChanged">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_HandleCoerceValue">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.HandleCoerceValue"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.HandleCoerceValueProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.HandleCoerceValue"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.HandleCoerceValue">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_HandleCollectionChanged">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.HandleCollectionChanged"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.HandleCollectionChangedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.HandleCollectionChanged"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.HandleCollectionChanged">
            <summary>
            Label text for property type
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.PropertyName_SetterControlsEnabled">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterControlsEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.SetterControlsEnabledProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterControlsEnabled"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.SetterControlsEnabled">
            <summary>
            Whether setter controls are enabled.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_SetterIsProtected">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtected"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtected"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtected">
            <summary>
            Property setter accessibility is protected.
            </summary>
        </member>
        <member name="M:LteDev.WPF.DependencyPropertyVM.SetterIsProtected_PropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtected"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="T:System.Boolean"/> value before the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtected"/> property was changed.</param>
            <param name="newValue">The <seealso cref="T:System.Boolean"/> value after the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtected"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_SetterIsPrivate">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.SetterIsPrivateProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate">
            <summary>
            Property setter accessibility is private.
            </summary>
        </member>
        <member name="M:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate_PropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="T:System.Boolean"/> value before the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate"/> property was changed.</param>
            <param name="newValue">The <seealso cref="T:System.Boolean"/> value after the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsPrivate"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_SetterIsInternal">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsInternal"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.SetterIsInternalProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsInternal"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.SetterIsInternal">
            <summary>
            Property setter accessibility is internal.
            </summary>
        </member>
        <member name="M:LteDev.WPF.DependencyPropertyVM.SetterIsInternal_PropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsInternal"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="T:System.Boolean"/> value before the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsInternal"/> property was changed.</param>
            <param name="newValue">The <seealso cref="T:System.Boolean"/> value after the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsInternal"/> property was changed.</param>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.DependencyPropertyName_SetterIsProtectedInternal">
            <summary>
            Defines the name for the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal"/> dependency property.
            </summary>
        </member>
        <member name="F:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternalProperty">
            <summary>
            Identifies the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal"/> dependency property.
            </summary>
        </member>
        <member name="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal">
            <summary>
            Property setter accessibility is protected internal.
            </summary>
        </member>
        <member name="M:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal_PropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            This gets called after the value associated with the <see cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal"/> dependency property has changed.
            </summary>
            <param name="oldValue">The <seealso cref="T:System.Boolean"/> value before the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal"/> property was changed.</param>
            <param name="newValue">The <seealso cref="T:System.Boolean"/> value after the <seealso cref="P:LteDev.WPF.DependencyPropertyVM.SetterIsProtectedInternal"/> property was changed.</param>
        </member>
    </members>
</doc>
