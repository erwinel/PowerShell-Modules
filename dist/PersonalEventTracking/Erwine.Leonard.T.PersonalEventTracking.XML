<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Erwine.Leonard.T.PersonalEventTracking</name>
    </assembly>
    <members>
        <member name="T:PersonalEventTracking.CalendarEventDefinition">
            <summary>
            Defines an event based off of specific block of time.
            </summary>
        </member>
        <member name="P:PersonalEventTracking.CalendarEventDefinition.HasOpenTasks">
            <summary>
            True if any of the <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" /> have a <see cref="P:PersonalEventTracking.TaskDefinition.State" /> value that is
            not <seealso cref="F:PersonalEventTracking.TaskState.Completed" /> or <seealso cref="F:PersonalEventTracking.TaskState.Canceled" />. 
            </summary>
        </member>
        <member name="P:PersonalEventTracking.CalendarEventDefinition.TaskList">
            <summary>
            Child tasks which must be completed before the current task can be completed.
            </summary>
            <returns>A collection of <see cref="T:PersonalEventTracking.TaskDefinition" /> objects.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.DependsUpon(PersonalEventTracking.TaskDefinition)">
            <summary>
            Determines whether the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" /> is dependent upon another <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to test.</param>
            <returns>True if the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" /> is dependent upon <paramref name="task" />;
            otherwise, false.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.AddTask(PersonalEventTracking.TaskDefinition)">
            <summary>
            Adds a <see cref="T:PersonalEventTracking.TaskDefinition" /> to the collection of <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" /> for the current
            <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to be added.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="task" /> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="task" /> already exists within (or is nested within)
            the current collection of <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.</exception>
            <exception cref="T:System.ArgumentException">Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.NotStarted" />
            and <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of <paramref name="task" /> is not <seealso cref="F:PersonalEventTracking.TaskState.NotStarted" /> -- or --
            Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.Suspended" /> and <see cref="P:PersonalEventTracking.TaskDefinition.State" />
            of <paramref name="task" /> is <seealso cref="F:PersonalEventTracking.TaskState.Active" /> -- or --
            Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.Completed" />
            or <seealso cref="F:PersonalEventTracking.TaskState.Canceled" />.</exception>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.InsertTask(System.Int32,PersonalEventTracking.TaskDefinition)">
            <summary>
            Inserts a <see cref="T:PersonalEventTracking.TaskDefinition" /> to the <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" /> for the current
            <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="index">Zero-based index at which the <see cref="T:PersonalEventTracking.TaskDefinition" /> is inserted.</param>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to be inserted.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="task" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is less than zero or greater than the current count
            of <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="task" /> already exists within (or is nested within)
            the current <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.</exception>
            <exception cref="T:System.ArgumentException">Current <see cref="P:PersonalEventTracking.CalendarEventDefinition.IsClosed" /> is true.</exception>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.RemoveTask(PersonalEventTracking.TaskDefinition)">
            <summary>
            Removes a <see cref="T:PersonalEventTracking.TaskDefinition" /> from the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to be removed from the collection of <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />
            for the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</param>
            <returns>True if the <paramref name="task" /> was removed; otherwise, false if <paramref name="task" /> was not a
            direct dependency of the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" /> (contained in <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" /> collection).</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.GetOrderOfTask(PersonalEventTracking.TaskDefinition)">
            <summary>
            Gets the order index for a task.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to get the order value for.</param>
            <returns>The zero-based index of <paramref name="task" /> in <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />
            or -1 if <paramref name="task" /> is not a direct dependency of the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.MoveTaskToTop(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a <see cref="T:PersonalEventTracking.TaskDefinition" /> to the top (zero index) in <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved to the top.</param>
            <returns>true if <paramref name="task" /> was moved to the top of the <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />;
            otherwise false, to indicate that <paramref name="task" /> is not a direct dependency of the
            current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.MoveTaskToBottom(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a <see cref="T:PersonalEventTracking.TaskDefinition" /> to the bottom (last index) in <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved to the bottom.</param>
            <returns>true if <paramref name="task" /> was moved to the bottom of the <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />;
            otherwise false, to indicate that <paramref name="task" /> is not a direct dependency of the
            current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.MoveTaskUp(PersonalEventTracking.TaskDefinition,System.Int32)">
            <summary>
            Moves a <see cref="T:PersonalEventTracking.TaskDefinition" /> up in order (toward the zero index) within <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved up.</param>
            <param name="count">The number of levels to move upward. If this is greater than the current order index,
            then <paramref name="task" /> will be moved to the top of the order.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.MoveTaskUp(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a <see cref="T:PersonalEventTracking.TaskDefinition" /> up in order (toward the zero index) within <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved up.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.MoveTaskDown(PersonalEventTracking.TaskDefinition,System.Int32)">
            <summary>
            Moves a <see cref="T:PersonalEventTracking.TaskDefinition" /> down in order (away from the zero index) within <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved down.</param>
            <param name="count">The number of levels to move upward. If this is greater than the remaining count
            in <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />, then <paramref name="task" /> will be moved to the bottom of the order.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.CalendarEventDefinition.MoveTaskDown(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a <see cref="T:PersonalEventTracking.TaskDefinition" /> down in order (away from the zero index) within <see cref="P:PersonalEventTracking.CalendarEventDefinition.TaskList" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved down.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.CalendarEventDefinition" />.</returns>
        </member>
        <member name="T:PersonalEventTracking.IntervalRecurranceDefinition">
            <summary>
            Defines an event which occurs at regular intervals.
            </summary>
        </member>
        <member name="T:PersonalEventTracking.RecurranceDefinition">
            <summary>
            Base class to define event recurrance
            </summary>
        </member>
        <member name="T:PersonalEventTracking.SerialRecurranceDefinition">
            <summary>
            Defines a recurrance which happens after the previous occurance is completed.
            </summary>
        </member>
        <member name="T:PersonalEventTracking.TaskDefinition">
            <summary>
            Defines an task
            </summary>
        </member>
        <member name="P:PersonalEventTracking.TaskDefinition.HasOpenDependencies">
            <summary>
            True if any of the <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> have a <see cref="P:PersonalEventTracking.TaskDefinition.State" /> value that is
            not <seealso cref="F:PersonalEventTracking.TaskState.Completed" /> or <seealso cref="F:PersonalEventTracking.TaskState.Canceled" />. 
            </summary>
        </member>
        <member name="P:PersonalEventTracking.TaskDefinition.State">
            <summary>
            The state of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <returns>A <seealso cref="T:PersonalEventTracking.TaskState" /> value which represents the state of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="P:PersonalEventTracking.TaskDefinition.Dependencies">
            <summary>
            Child tasks which must be completed before the current task can be completed.
            </summary>
            <returns>A collection of <see cref="T:PersonalEventTracking.TaskDefinition" /> objects.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.CanChangeToState(PersonalEventTracking.TaskState,PersonalEventTracking.TaskState@,System.String@)">
            <summary>
            Determine if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of the current <see cref="T:PersonalEventTracking.TaskDefinition" /> can be changed to
            a <seealso cref="T:PersonalEventTracking.TaskState" /> value.
            </summary>
            <param name="state">A <seealso cref="T:PersonalEventTracking.TaskState" /> value to test.</param>
            <param name="actualState">The actual <seealso cref="T:PersonalEventTracking.TaskState" /> value to that would have been applied.</param>
            <param name="reason">A string message which states the reason why the state cannot be changed as requested.</param>
            <returns>True if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> can be changed to new <paramref name="state" /> value; otherwise, false.
            If the current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> already matches the <paramref name="state" /> value,
            then this will return true as well.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.CanChangeToState(PersonalEventTracking.TaskState,PersonalEventTracking.TaskState@)">
            <summary>
            Determine if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of the current <see cref="T:PersonalEventTracking.TaskDefinition" /> can be changed to
            a <seealso cref="T:PersonalEventTracking.TaskState" /> value.
            </summary>
            <param name="state">A <seealso cref="T:PersonalEventTracking.TaskState" /> value to test.</param>
            <param name="actualState">The actual <seealso cref="T:PersonalEventTracking.TaskState" /> value to that would have been applied.</param>
            <returns></returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.CanChangeToState(PersonalEventTracking.TaskState)">
            <summary>
            Determine if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of the current <see cref="T:PersonalEventTracking.TaskDefinition" /> can be changed to
            a <seealso cref="T:PersonalEventTracking.TaskState" /> value.
            </summary>
            <param name="state">A <seealso cref="T:PersonalEventTracking.TaskState" /> value to test.</param>
            <returns>True if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> can be changed to new <paramref name="state" /> value; otherwise, false.
            If the current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> already matches the <paramref name="state" /> value,
            then this will return true as well.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.TrySetState(PersonalEventTracking.TaskState,PersonalEventTracking.TaskState@,System.String@)">
            <summary>
            Attempt to change the value of <see cref="P:PersonalEventTracking.TaskDefinition.State" />.
            </summary>
            <param name="state">The new <seealso cref="T:PersonalEventTracking.TaskState" /> for the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</param>
            <param name="actualState">The actual <seealso cref="T:PersonalEventTracking.TaskState" /> that was applied to the
            current <see cref="T:PersonalEventTracking.TaskDefinition" />.
            If the state was not changed, then this will be the current value of <see cref="P:PersonalEventTracking.TaskDefinition.State" />.</param>
            <param name="reason">A string message which states the reason why the state could not be changed as requested or why the
            actual state value was different.</param>
            <returns>True if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> value was changed; otherwise, false if the state could not be changed.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.TrySetState(PersonalEventTracking.TaskState,PersonalEventTracking.TaskState@)">
            <summary>
            Attempt to change the value of <see cref="P:PersonalEventTracking.TaskDefinition.State" />.
            </summary>
            <param name="state">The new <seealso cref="T:PersonalEventTracking.TaskState" /> for the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</param>
            <param name="actualState">The actual <seealso cref="T:PersonalEventTracking.TaskState" /> that was applied to the
            current <see cref="T:PersonalEventTracking.TaskDefinition" />.
            If the state was not changed, then this will be the current value of <see cref="P:PersonalEventTracking.TaskDefinition.State" />.</param>
            <returns>True if the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> value was changed; otherwise, false if the state could not be changed.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.SetState(PersonalEventTracking.TaskState)">
            <summary>
            Change the value of <see cref="P:PersonalEventTracking.TaskDefinition.State" />.
            </summary>
            <param name="state">The new <seealso cref="T:PersonalEventTracking.TaskState" /> for the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</param>
            <returns>The actual <seealso cref="T:PersonalEventTracking.TaskState" /> that was applied to the
            current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
            <exception cref="T:System.InvalidOperationException">The state of one of the <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> prevented the
            <see cref="P:PersonalEventTracking.TaskDefinition.State" /> from being changed as requested.</exception>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.DependsUpon(PersonalEventTracking.TaskDefinition)">
            <summary>
            Determines whether the current <see cref="T:PersonalEventTracking.TaskDefinition" /> is dependent upon another <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to test.</param>
            <returns>True if the current <see cref="T:PersonalEventTracking.TaskDefinition" /> is dependent upon <paramref name="task" />;
            otherwise, false.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.IsDependencyOf(PersonalEventTracking.TaskDefinition)">
            <summary>
            /// Determines whether another <see cref="T:PersonalEventTracking.TaskDefinition" /> is dependent upon the current <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to test.</param>
            <returns>True if <paramref name="task" /> is dependent upon the current <see cref="T:PersonalEventTracking.TaskDefinition" />;
            otherwise, false.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.AddDependencyTask(PersonalEventTracking.TaskDefinition)">
            <summary>
            Adds a <see cref="T:PersonalEventTracking.TaskDefinition" /> to the collection of <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> for the current
            <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="task">Dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> to be added.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="task" /> is null.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="task" /> already exists within (or is nested within)
            the current collection of <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> - or - the current <see cref="T:PersonalEventTracking.TaskDefinition" /> is a direct or
            indirect dependency of the <paramref name="task" />.</exception>
            <exception cref="T:System.ArgumentException">Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.NotStarted" />
            and <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of <paramref name="task" /> is not <seealso cref="F:PersonalEventTracking.TaskState.NotStarted" /> -- or --
            Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.Suspended" /> and <see cref="P:PersonalEventTracking.TaskDefinition.State" />
            of <paramref name="task" /> is <seealso cref="F:PersonalEventTracking.TaskState.Active" /> -- or --
            Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.Completed" />
            or <seealso cref="F:PersonalEventTracking.TaskState.Canceled" />.</exception>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.InsertDependencyTask(System.Int32,PersonalEventTracking.TaskDefinition)">
            <summary>
            Inserts a <see cref="T:PersonalEventTracking.TaskDefinition" /> to the collection of <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> for the current
            <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="index">Zero-based index at which the <see cref="T:PersonalEventTracking.TaskDefinition" /> is inserted as a dependency.</param>
            <param name="task">Dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> to be inserted.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="task" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is less than zero or greater than the current count
            of <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="task" /> already exists within (or is nested within)
            the current collection of <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> - or - the current <see cref="T:PersonalEventTracking.TaskDefinition" /> is a direct or
            indirect dependency of the <paramref name="task" />.</exception>
            <exception cref="T:System.ArgumentException">Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.NotStarted" />
            and <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of <paramref name="task" /> is not <seealso cref="F:PersonalEventTracking.TaskState.NotStarted" /> -- or --
            Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.Suspended" /> and <see cref="P:PersonalEventTracking.TaskDefinition.State" />
            of <paramref name="task" /> is <seealso cref="F:PersonalEventTracking.TaskState.Active" /> -- or --
            Current <see cref="P:PersonalEventTracking.TaskDefinition.State" /> is <seealso cref="F:PersonalEventTracking.TaskState.Completed" />
            or <seealso cref="F:PersonalEventTracking.TaskState.Canceled" />.</exception>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.RemoveDependentTask(PersonalEventTracking.TaskDefinition)">
            <summary>
            Removes a <see cref="T:PersonalEventTracking.TaskDefinition" /> dependency from the current <see cref="T:PersonalEventTracking.TaskDefinition" />.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to be removed from the collection of <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />
            for the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</param>
            <returns>True if the <paramref name="task" /> was removed; otherwise, false if <paramref name="task" /> was not a
            direct dependency of the current <see cref="T:PersonalEventTracking.TaskDefinition" /> (contained in <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" /> collection).</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.GetOrderOfDependency(PersonalEventTracking.TaskDefinition)">
            <summary>
            Gets the order index for a dependency task.
            </summary>
            <param name="task"><see cref="T:PersonalEventTracking.TaskDefinition" /> to get the order value for.</param>
            <returns>The zero-based index of <paramref name="task" /> in <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />
            or -1 if <paramref name="task" /> is not a direct dependency of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.MoveDependencyToTop(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> to the top (zero index) in <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved to the top.</param>
            <returns>true if <paramref name="task" /> was moved to the top of the <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />;
            otherwise false, to indicate that <paramref name="task" /> is not a direct dependency of the
            current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.MoveDependencyToBottom(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> to the bottom (last index) in <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved to the bottom.</param>
            <returns>true if <paramref name="task" /> was moved to the bottom of the <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />;
            otherwise false, to indicate that <paramref name="task" /> is not a direct dependency of the
            current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.MoveDependencyUp(PersonalEventTracking.TaskDefinition,System.Int32)">
            <summary>
            Moves a dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> up in order (toward the zero index) within <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved up.</param>
            <param name="count">The number of levels to move upward. If this is greater than the current order index,
            then <paramref name="task" /> will be moved to the top of the order.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.MoveDependencyUp(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> up in order (toward the zero index) within <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved up.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.MoveDependencyDown(PersonalEventTracking.TaskDefinition,System.Int32)">
            <summary>
            Moves a dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> down in order (away from the zero index) within <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved down.</param>
            <param name="count">The number of levels to move upward. If this is greater than the remaining count
            in <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />, then <paramref name="task" /> will be moved to the bottom of the order.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="M:PersonalEventTracking.TaskDefinition.MoveDependencyDown(PersonalEventTracking.TaskDefinition)">
            <summary>
            Moves a dependency <see cref="T:PersonalEventTracking.TaskDefinition" /> down in order (away from the zero index) within <see cref="P:PersonalEventTracking.TaskDefinition.Dependencies" />.
            </summary>
            <param name="task">The <see cref="T:PersonalEventTracking.TaskDefinition" /> to be moved down.</param>
            <returns>The new order index of the <see cref="T:PersonalEventTracking.TaskDefinition" /> or -1 if <paramref name="task" />
            is not a direct dependency of the current <see cref="T:PersonalEventTracking.TaskDefinition" />.</returns>
        </member>
        <member name="T:PersonalEventTracking.TaskState">
            <summary>
            Represents the state of a <see cref="T:PersonalEventTracking.TaskDefinition" />
            </summary>
        </member>
        <member name="F:PersonalEventTracking.TaskState.NotStarted">
            <summary>
            Task has not been started.
            </summary>
            <remarks>This implies that the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of all task dependencies are <see cref="F:PersonalEventTracking.TaskState.NotStarted" />
            as well.</remarks>
        </member>
        <member name="F:PersonalEventTracking.TaskState.Active">
            <summary>
            Task is active.
            </summary>
        </member>
        <member name="F:PersonalEventTracking.TaskState.Suspended">
            <summary>
            Task is suspended.
            </summary>
            <remarks>This implies that none of the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of all task dependencies are
            either <see cref="F:PersonalEventTracking.TaskState.Active" />.</remarks>
        </member>
        <member name="F:PersonalEventTracking.TaskState.PendingDependencies">
            <summary>
            Current task has dependences which have not been completed or canceled.
            </summary>
            <remarks>This implies that once the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of all task dependencies
            are <see cref="F:PersonalEventTracking.TaskState.Completed" /> or <see cref="F:PersonalEventTracking.TaskState.Canceled" />, then the current task will be <see cref="F:PersonalEventTracking.TaskState.Completed" />.</remarks>
        </member>
        <member name="F:PersonalEventTracking.TaskState.Completed">
            <summary>
            Task is completed.
            </summary>
            <remarks>This implies that the <see cref="P:PersonalEventTracking.TaskDefinition.State" /> of all task dependencies are <see cref="F:PersonalEventTracking.TaskState.Completed" />
            or <see cref="F:PersonalEventTracking.TaskState.Canceled" /> as well.</remarks>
        </member>
        <member name="F:PersonalEventTracking.TaskState.Canceled">
            <summary>
            Task was canceled.
            </summary>
            <remarks>This implies that all task dependencies have either been removed or their <see cref="P:PersonalEventTracking.TaskDefinition.State" />
            is <see cref="F:PersonalEventTracking.TaskState.Completed" /> or <see cref="F:PersonalEventTracking.TaskState.Canceled" />.</remarks>
        </member>
        <member name="T:PersonalEventTracking.TaskStateChangeEventArgs">
            <summary>
            Represents the values of a <seealso cref="P:PersonalEventTracking.TaskDefinition.State" /> change.
            </summary>
        </member>
        <member name="P:PersonalEventTracking.TaskStateChangeEventArgs.PreviousState">
            <summary>
            <seealso cref="T:PersonalEventTracking.TaskState" /> value being changed from.
            </summary>
        </member>
        <member name="P:PersonalEventTracking.TaskStateChangeEventArgs.NewState">
            <summary>
            <seealso cref="T:PersonalEventTracking.TaskState" /> value being changed to.
            </summary>
        </member>
        <member name="M:PersonalEventTracking.TaskStateChangeEventArgs.#ctor(PersonalEventTracking.TaskState,PersonalEventTracking.TaskState)">
            <summary>
            Initializes a new instance of <see cref="T:PersonalEventTracking.TaskStateChangeEventArgs" />
            </summary>
            <param name="previousState"><seealso cref="T:PersonalEventTracking.TaskState" /> value being changed from</param>
            <param name="newState"><seealso cref="T:PersonalEventTracking.TaskState" /> value being changed to.</param>
        </member>
        <member name="M:PersonalEventTracking.TaskStateChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:PersonalEventTracking.TaskStateChangeEventArgs" />
            </summary>
        </member>
        <member name="T:PersonalEventTracking.TaskStateChangingEventArgs">
            <summary>
            Represents the values of a pending <seealso cref="P:PersonalEventTracking.TaskDefinition.State" /> change.
            </summary>
        </member>
        <member name="P:PersonalEventTracking.TaskStateChangingEventArgs.Cancel">
            <summary>
            True if change should be canceled; otherwise false.
            </summary>
        </member>
        <member name="P:PersonalEventTracking.TaskStateChangingEventArgs.Reason">
            <summary>
            A verbose message stating why the change was canceled.
            </summary>
        </member>
        <member name="M:PersonalEventTracking.TaskStateChangingEventArgs.#ctor(PersonalEventTracking.TaskState,PersonalEventTracking.TaskState)">
            <summary>
            Initializes a new instance of <see cref="T:PersonalEventTracking.TaskStateChangingEventArgs" />
            </summary>
            <param name="previousState"><seealso cref="T:PersonalEventTracking.TaskState" /> value being changed from</param>
            <param name="newState"><seealso cref="T:PersonalEventTracking.TaskState" /> value being changed to.</param>
        </member>
        <member name="M:PersonalEventTracking.TaskStateChangingEventArgs.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:PersonalEventTracking.TaskStateChangingEventArgs" />
            </summary>
        </member>
    </members>
</doc>
