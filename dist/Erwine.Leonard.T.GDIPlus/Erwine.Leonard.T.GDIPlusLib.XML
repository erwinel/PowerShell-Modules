<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Erwine.Leonard.T.GDIPlusLib</name>
    </assembly>
    <members>
        <member name="T:Erwine.Leonard.T.GDIPlus.ColorExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.TryGetColor(System.Management.Automation.PSObject,Erwine.Leonard.T.GDIPlus.IColorModel@)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.AsSimplestType(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorExtensions.HUE_MAXVALUE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.HSBtoRGB(System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.RGBtoHSB(System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.ToPercentage(System.Byte)">
            <summary>
            Converts 8-bit value to a percentage value.
            </summary>
            <param name="value">Byte value to convert.</param>
            <returns>8-bit value converted to a value ranging from 0.0 to 1.0.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.FromPercentage(System.Single)">
            <summary>
            Converts a percentage value to an 8-bit value.
            </summary>
            <param name="value">Floating point value to convert.</param>
            <returns>8-bit value representing a percentage value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than 0.0 or greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.ToDegrees(System.Byte)">
            <summary>
            Converts an 8-bit value to degrees.
            </summary>
            <param name="value">Byte value to convert.</param>
            <returns>8-bit value converted to a value ranging from 0.0 to (but not including) 360.0.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.FromDegrees(System.Single)">
            <summary>
            Converts a degree value to an 8-bit value.
            </summary>
            <param name="value">Floating point value to convert.</param>
            <returns>8-bit value representing a degree measurement.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="value"/> is less than 0.0 or greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.ToDrawingColor(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            Converts the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> as a <seealso cref="T:System.Drawing.Color"/> object.
            </summary>
            <returns>A <seealso cref="T:System.Drawing.Color"/> object that represents the same color as the current <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.ToMediaColor(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            Converts the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> as a <seealso cref="T:System.Windows.Media.Color"/> object.
            </summary>
            <returns>A <seealso cref="T:System.Windows.Media.Color"/> object that represents the same color as the current <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.MergeAverage``1(Erwine.Leonard.T.GDIPlus.IHsbColorModel{``0},Erwine.Leonard.T.GDIPlus.IHsbColorModel{``0},Erwine.Leonard.T.GDIPlus.IHsbColorModel{``0}[])">
            <summary>
            Merges a source <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> with 1 or more <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> objects by averaging average their values.
            </summary>
            <typeparam name="T">Value component type.</typeparam>
            <param name="source"></param>
            <param name="other"></param>
            <param name="additionalColors"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.MergeAverage``1(Erwine.Leonard.T.GDIPlus.IRgbColorModel{``0},Erwine.Leonard.T.GDIPlus.IRgbColorModel{``0},Erwine.Leonard.T.GDIPlus.IRgbColorModel{``0}[])">
            <summary>
            Merges a source <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> with 1 or more <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> objects by averaging average their values.
            </summary>
            <typeparam name="T">Value component type.</typeparam>
            <param name="source"></param>
            <param name="other"></param>
            <param name="additionalColors"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.ColorExtensions.MergeAverage``1(``0,Erwine.Leonard.T.GDIPlus.IColorModel,Erwine.Leonard.T.GDIPlus.IColorModel[])">
            <summary>
            Merges a source <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> of type <typeparamref name="T"/> with 1 or more <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> objects by averaging average their values.
            </summary>
            <typeparam name="T">Type of <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> value to merge into.</typeparam>
            <param name="source">The <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> of type <typeparamref name="T"/> to be merged with other <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> objects.</param>
            <param name="other">The <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> to merge with the source value.</param>
            <param name="additionalColors">Additional <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> models to merge with the source value.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> of type <typeparamref name="T"/> representing the average of all the meged color models.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.New_Image">
            <summary>
            New-Image
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.Open_Image">
            <summary>
            Open-Image
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.Enter_DrawingSurface">
            <summary>
            New-DrawingSurface
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.Sync_DrawingSurface">
            <summary>
            Sync-DrawingSurface
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.Exit_DrawingSurface">
            <summary>
            Exit-DrawingSurface
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.ConvertTo_ResizedImage">
            <summary>
            New-Image
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.ConvertTo_CroppedImage">
            <summary>
            New-Image
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Commands.HsbColor">
            <summary>
            Describes a color in terms of it's hue, saturation and brightness.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.HUE_MAXVALUE">
            <summary>
            Maximum hue value, which is equivalent to 0.0.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.H">
            <summary>
            The current color's hue in degrees, with values ranging from 0.0 to (but not including) 360.0.
            </summary>
            <remarks>0 = red; 60 = yellow; 120 = green; 180 = cyan; 240 = blue; 300 = magenta.</remarks>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.S">
            <summary>
            The current color's saturation as a percentage value, ranging from 0.0 to 1.0, with 0.0 being no saturation (gray scale).
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.B">
            <summary>
            The current color's brightness as a percentage value, ranging from 0.0 to 1.0, with 0.0 being completely dark (black) and 1.0 being white.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.HValue">
            <summary>
            The current color's hue as a byte value.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.SValue">
            <summary>
            The current color's saturation as a byte value, with 0 being no saturation (gray scale).
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.BValue">
            <summary>
            The current color's brightness as a byte value, with 0 being completely dark (black) and 255 being white.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.Commands.HsbColor"/> structure according to hue, saturation and brightness in byte values.
            </summary>
            <param name="hue">The color's hue.</param>
            <param name="saturation">The saturation of the color.</param>
            <param name="brightness">The color's brightness.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.Commands.HsbColor"/> structure according to hue in degrees, saturation and brightness in percentage values.
            </summary>
            <param name="hue">The color's hue.</param>
            <param name="saturation">The saturation of the color.</param>
            <param name="brightness">The color's brightness.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.#ctor(Erwine.Leonard.T.GDIPlus.Commands.RgbColor)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.Commands.HsbColor"/> structure from an RGB color model.
            </summary>
            <param name="other">RGB color model from which to derive the hue, saturation and brightness.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.Commands.HsbColor"/> structure from a <seealso cref="T:System.Drawing.Color"/> object.
            </summary>
            <param name="color">RGB color model from which to derive the hue, saturation and brightness.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.RGBtoHSB(System.Byte,System.Byte,System.Byte,System.Single@,System.Single@,System.Single@)">
            <summary>
            Converts the byte values of an RGB color model to a floating-point HSB color model.
            </summary>
            <param name="red">The intensity of red in the color.</param>
            <param name="green">The intensity of green in the color.</param>
            <param name="blue">The intensity of blue in the color</param>
            <param name="h">Returns the color's hue in degreees.</param>
            <param name="s">Returns the color's saturation percentage value.</param>
            <param name="b">Returns the color's brightness value.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.RGBFtoHSB(System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Converts the percentage values of an RGB color model to a floating-point HSB color model.
            </summary>
            <param name="red">The intensity of red in the color.</param>
            <param name="green">The intensity of green in the color.</param>
            <param name="blue">The intensity of blue in the color</param>
            <param name="h">Returns the color's hue in degreees.</param>
            <param name="s">Returns the color's saturation percentage value.</param>
            <param name="b">Returns the color's brightness value.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.ToColor">
            <summary>
            Creates a new <seealso cref="T:System.Drawing.Color"/> object that is equivalent to the current HSB color model.
            </summary>
            <returns>A <seealso cref="T:System.Drawing.Color"/> object that is equivalent to the current HSB color model.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.Equals(Erwine.Leonard.T.GDIPlus.Commands.HsbColor)">
            <summary>
            Determins whether the current HSB color model values are equivalent to the values of another.
            </summary>
            <param name="other">The other HSB color values to compare to.</param>
            <returns><c>true</c> if the <paramref name="other"/> <see cref="T:Erwine.Leonard.T.GDIPlus.Commands.HsbColor"/> values are equal to the current values; otherwise, false.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.Equals(Erwine.Leonard.T.GDIPlus.Commands.RgbColor)">
            <summary>
            Determines whether the color of the current HSB model is the same as the color represented by a RGB color model.
            </summary>
            <param name="other">The <seealso cref="T:Erwine.Leonard.T.GDIPlus.Commands.RgbColor"/> model to compare to.</param>
            <returns><c>true</c> if the <see cref="T:Erwine.Leonard.T.GDIPlus.Commands.RgbColor"/> represents the same color as the current model; otherwise, false.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.Equals(System.Drawing.Color)">
            <summary>
            Determines whether the color of the current HSB model is the same as the color represented by a RGB <see cref="T:System.Drawing.Color"/> object.
            </summary>
            <param name="other">The <seealso cref="T:System.Drawing.Color"/> object to compare to.</param>
            <returns><c>true</c> if the <see cref="T:System.Drawing.Color"/> represents the same color as the current model; otherwise, false.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Commands.HsbColor.Equals(System.Object)">
            <summary>
            Determines whether another object is equivalent to the current model.
            </summary>
            <param name="obj">Other object to compare to.</param>
            <returns><c>true</c> if the other object represents the same color as the current model; otherwise, false.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1">
            <summary>
            Represents a syncrhonized (thread-safe), strongly typed list of class objects whose elements are not permitted to have null values.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1"/> class that is empty and has the 
            default initial capacity.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1"/> class that contains elements copied from the 
            specified list and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="list">The list whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="list"/> contains one or more null values.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.NonNullSynchronizedList`1"/> class that contains elements copied from the 
            specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="collection"/> contains one or more null values.</exception>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1">
            <summary>
            Base class to provide syncronized (thread-safe) collections.
            </summary>
            <typeparam name="T">The type of elements in the collection.</typeparam>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> class that is empty and has the 
            default initial capacity.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> class that contains elements copied from the 
            specified list and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="list">The list whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> is null.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> class that contains elements copied from the 
            specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.Initialize(System.Collections.Generic.ICollection{`0})">
            <summary>
            Called from within the base constructor to initialize the inner synchronized list.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>The zero-based index of <paramref name="item"/> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.BaseInsert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
            <exception cref="T:System.NullReferenceException"><paramref name="item"/> is null reference in 
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.BaseRemoveAt(System.Int32)">
            <summary>
            Removes the S<see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.BaseSet(System.Int32,`0)">
            <summary>
            Sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to set.</param>
            <param name="item">The object to set at the specified index in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>
            is read-only.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>true if <paramref name="item"/> is found in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>; otherwise, false.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> to an <see cref="T:System.Array"/>,
            starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied 
            from <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>
            is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination array.</exception>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.BaseAdd(`0)">
            <summary>
            Adds an item to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only.
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.BaseClear">
            <summary>
            Removes all items from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only.
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.BaseRemove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>true if item was successfully removed from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>;
            otherwise, false. This method also returns false if item is not found in the 
            original <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerContains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>true if the <see cref="T:System.Object"/> is found in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>; 
            otherwise, false.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerIndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerGet(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerAdd(System.Object)">
            <summary>
            Adds an item to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <param name="value">The object to add to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/> could not be cast to <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerInsert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in 
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
            <exception cref="T:System.NullReferenceException"><paramref name="value"/> is null reference in 
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/> could not be cast to <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerRemove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <param name="value">The object to remove from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in 
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> has a fixed size.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerSet(System.Int32,System.Object)">
            <summary>
            Sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to set.</param>
            <param name="value">The object to set at the specified index in the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>
            is read-only.</exception>
            <exception cref="T:System.InvalidCastException"><paramref name="value"/> could not be cast to <typeparamref name="T"/>.</exception>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerCopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> to an <see cref="T:System.Array"/>, 
            starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied 
            from <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>The number of elements in the source <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> is greater than the available space 
            from <paramref name="index"/> to the end of the destination array.</para>
            <para>-or-</para>
            <para>The type of the source <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> cannot be cast automatically to the type of the 
            destination array.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through 
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1.InnerGetEnumerator">
            <summary>
            Returns an enumerator that iterates through the inner collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1">
            <summary>
            Represents a syncrhonized (thread-safe), strongly typed list of objects that can be accessed by index.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> class that is empty and has the 
            default initial capacity.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> class that contains elements copied from the 
            specified list and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="list">The list whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> is null.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedEnumerableBase`1"/> class that contains elements copied from the 
            specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> has a fixed size.</para></exception>
            <exception cref="T:System.NullReferenceException"><paramref name="item"/> is null reference in 
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the S<see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> is read-only.</exception>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <returns>The element at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in
            the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>
            is read-only.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> has a fixed size.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.Clear">
            <summary>
            Removes all items from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> is read-only.
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> has a fixed size.</para></exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</param>
            <returns>true if item was successfully removed from the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>;
            otherwise, false. This method also returns false if item is not found in the 
            original <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/>.</returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> is read-only
            <para>-or-</para>
            <para>The <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedList`1"/> has a fixed size.</para></exception>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1">
            <summary>
            Represents a syncrhonized (thread-safe), read-only list of objects that can be accessed by index, and whose elements are strongly typed.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1"/> class with a 
            specified number of auto-created elements.
            </summary>
            <param name="size">Size of the read-only collection.</param>
            <exception cref="T:System.OverflowException"><paramref name="size"/> is less than zero.</exception>
            <exception cref="T:System.MissingMethodException">The type that is specified for <typeparamref name="T"/> does not have a parameterless constructor.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1.#ctor(`0[])">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1"/> class that contains elements copied from the 
            specified array.
            </summary>
            <param name="array">The array whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1.Initialize(System.Collections.Generic.ICollection{`0})">
            <summary>
            Called from within the base constructor to initialize the inner synchronized list.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.SynchronizedReadOnlyList`1.CreateNewItem(System.Int32)">
            <summary>
            Gets called during initialization when an integer value was passed to the constructor, in order to populate an element.
            </summary>
            <param name="index">Index at which the item will be placed.</param>
            <returns>A reference to the newly created object.</returns>
            <exception cref="T:System.MissingMethodException">The type that is specified for <typeparamref name="T"/> does not have a parameterless constructor.</exception>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1">
            <summary>
            Wraps an <see cref="T:System.Collections.IEnumerator"/> as a strongly-typed enumerator.
            </summary>
            <typeparam name="T">Type of value expected to be returned from <see cref="T:System.Collections.IEnumerable"/> object.</typeparam>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of <see cref="T:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1"/> to enumerate results from
            an <see cref="T:System.Collections.IEnumerator"/> obtained from <paramref name="obj"/>.
            </summary>
            <param name="obj"> <see cref="T:System.Collections.IEnumerable"/> object to enumerate.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/> is null.</exception>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <exception cref="T:System.InvalidOperationException">The enumeration has not started or the enumeration was finished.</exception>
            <exception cref="T:System.InvalidCastException">Enumerated item could not be cast to.</exception>
            <exception cref="T:System.NullReferenceException">Enumerated item was null and type <typeparamref name="T"/> is a value type.</exception>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The enumeration has not started or the enumeration was finished.</exception>
            <exception cref="T:System.InvalidCastException">Enumerated item could not be cast to.</exception>
            <exception cref="T:System.NullReferenceException">Enumerated item was null and type <typeparamref name="T"/> is a value type.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.Reset">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.Dispose">
            <summary>
            Disposes the internal <see cref="T:System.Collections.IEnumerator"/> if applicable.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Collections.Synchronized.TypedEnumeratorWrapper`1.Dispose(System.Boolean)">
            <summary>
            Disposes the internal <see cref="T:System.Collections.IEnumerator"/> if applicable.
            </summary>
            <param name="disposing">true if method has been called direclty or indirectly by user code;
            otherwise false to indicate that this has been called by the runtime inside the finalizer.</param>
            <remarks>If <paramref name="disposing"/> is false, then you should not reference any other objects.</remarks>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.ColorStringFormat">
            <summary>
            Represents a color string format.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBHex">
            <summary>
            Format contains 3 pairs of hexidecimal string values representing the Red, Green and Blue color values respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBHexOpt">
            <summary>
            Format contains 3 single-character hexidecimal string values or 3 pairs of hexidecimal string values representing the Red, Green and Blue color values respectively.
            </summary>
            <remarks>This is the same as <seealso cref="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBHex" />, except that if all 3 pairs are the same character repeated twice, then it is shortened to the first character of each pair.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBAHex">
            <summary>
            Format contains 4 pairs of hexidecimal string values representing the Red, Green, Blue and Alpha Layer (transparency) color values respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBAHexOpt">
            <summary>
            Format contains 4 single-character hexidecimal string values or 4pairs of hexidecimal string values representing the Red, Green, Blue and Alpha Layer (transparency) color values respectively.
            </summary>
            <remarks>This is the same as <seealso cref="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBAHex" />, except that if all 4 pairs are the same character repeated twice, then it is shortened to the first character of each pair.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLHex">
            <summary>
            Format contains 3 pairs of hexidecimal string values representing the Hue, Saturation and Lightness color values respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLHexOpt">
            <summary>
            Format contains 3 single-character hexidecimal string values or 3 pairs of hexidecimal string values representing the Hue, Saturation and Lightness color values respectively.
            </summary>
            <remarks>This is the same as <seealso cref="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLHex" />, except that if all 3 pairs are the same character repeated twice, then it is shortened to the first character of each pair.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLAHex">
            <summary>
            Format contains 4 pairs of hexidecimal string values representing the Hue, Saturation, Lightness and Alpha Layer (transparency) color values respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLAHexOpt">
            <summary>
            Format contains 4 single-character hexidecimal string values or 4pairs of hexidecimal string values representing the Hue, Saturation, Lightness and Alpha Layer (transparency) color values respectively.
            </summary>
            <remarks>This is the same as <seealso cref="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLAHex" />, except that if all 4 pairs are the same character repeated twice, then it is shortened to the first character of each pair.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBValues">
            <summary>
            Uses format &quot;rgb(<c>[0-255]</c>, <c>[0-255]</c>, <c>[0-255]</c>)&quot; where the numbers within the parenthesis represent the Red, Green and Blue color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBAValues">
            <summary>
            Uses format &quot;rgba(<c>[0-255]</c>, <c>[0-255]</c>, <c>[0-255]</c>, <c>[0.0-1.0]</c>)&quot; where the numbers within the parenthesis represent the Red, Green, Blue and Alpha Layer (transparency) color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLValues">
            <summary>
            Uses format &quot;rgb(<c>[0-255]</c>, <c>[0-255]</c>, <c>[0-255]</c>)&quot; where the numbers within the parenthesis represent the Hue, Saturation and Lightness color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLAValues">
            <summary>
            Uses format &quot;rgba(<c>[0-255]</c>, <c>[0-255]</c>, <c>[0-255]</c>, <c>[0.0-1.0]</c>)&quot; where the numbers within the parenthesis represent the Hue, Saturation, Lightness and Alpha Layer (transparency) color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBPercent">
            <summary>
            Uses format &quot;rgb(<c>[0-100]</c>%, <c>[0-100]</c>%, <c>[0-100]</c>%)&quot; where the numbers within the parenthesis represent the Red, Green and Blue color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.RGBAPercent">
            <summary>
            Uses format &quot;rgba(<c>[0-100]</c>%, <c>[0-100]</c>%, <c>[0-100]</c>%, <c>[0-100]</c>%)&quot; where the numbers within the parenthesis represent the Red, Green, Blue and Alpha Layer (transparency) color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLPercent">
            <summary>
            Uses format &quot;hsl(<c>[0-100]</c>%, <c>[0-100]</c>%, <c>[0-100]</c>%)&quot; where the numbers within the parenthesis represent the Hue, Saturation and Lightness color values, respectively.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ColorStringFormat.HSLAPercent">
            <summary>
            Uses format &quot;hsla(<c>[0-100]</c>%, <c>[0-100]</c>%, <c>[0-100]</c>%, <c>[0-100]</c>%)&quot; where the numbers within the parenthesis represent the Hue, Saturation, Lightness and Alpha Layer (transparency) color values, respectively.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.HsbColor32">
            <summary>
            An HSB (Hue,Saturation,Brightness) color model using 32 bits.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.HsbColor32.ParseRegex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32.Hue">
            <summary>
            The hue of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32.Saturation">
            <summary>
            The color saturation.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32.Brightness">
            <summary>
            The brightness of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> from HSB values and specified opaqueness.
            </summary>
            <param name="hue">Color hue in degrees, ranging from 0.0 to 360.0.</param>
            <param name="saturation">Color saturation in pecentage, ranging from 0.0 to 1.0, where 0.0 is grayscale.</param>
            <param name="brightness">Color brightness in percentage, ranging from 0.0 to 1.0, where 0.0 is completely dark (black) and 1.0 is completely light (white).</param>
            <param name="alpha">Color opaqueness (alpha layer) in percentage, where 0.0 is transparent and 1.0 is opaque.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> from HSB values with no transparency.
            </summary>
            <param name="hue">Color hue in degrees, ranging from 0.0 to 360.0.</param>
            <param name="saturation">Color saturation in pecentage, ranging from 0.0 to 1.0, where 0.0 is grayscale.</param>
            <param name="brightness">Color brightness in percentage, ranging from 0.0 to 1.0, where 0.0 is completely dark (black) and 1.0 is completely light (white).</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.#ctor(Erwine.Leonard.T.GDIPlus.HsbColorF)">
            <summary>
            Creates a new <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> from a <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="ahsb"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.AsHsbF">
            <summary>
            Returns a <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" />.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" />.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.AsRgb32">
            <summary>
            Returns a <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" />.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" />.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.AsRgbF">
            <summary>
            Returns a <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" />.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" />.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.AsNormalized">
            <summary>
            Returns a <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> with the color values normalized for accurate comparisons.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value representing the same color as the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> with the color values normalized for accurate comparisons.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.HsbColor32)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(System.Int32)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte}})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToAHSB">
            <summary>
            Gets the AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> value.
            </summary>
            <returns>The AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32" /> value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <param name="a"></param>
            <param name="canShorten"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <param name="canShorten"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToValueParameterString(System.Byte,System.Byte,System.Byte,System.Single)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToValueParameterString(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.ToValueParameterString(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32.TryParse(System.String,Erwine.Leonard.T.GDIPlus.HsbColor32@)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized">
            <summary>
            A normalized HSB (Hue,Saturation,Brightness) color model using 32 bits.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Hue">
            <summary>
            The hue of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Saturation">
            <summary>
            The color saturation.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Brightness">
            <summary>
            The brightness of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(Erwine.Leonard.T.GDIPlus.RgbColorF)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(Erwine.Leonard.T.GDIPlus.RgbColor32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(Erwine.Leonard.T.GDIPlus.HsbColor32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="ahsb"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.AsHsbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.AsRgb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.AsRgbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte},System.Boolean)">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <param name="exact"><c>true</c> to compare exact values; otherwise, <c>false</c> to compare normalized values.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single},System.Boolean)">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <param name="exact"><c>true</c> to compare exact values; otherwise, <c>false</c> to compare normalized values.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single},System.Boolean)">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <param name="exact"><c>true</c> to compare exact values; otherwise, <c>false</c> to compare normalized values.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <param name="exact"><c>true</c> to compare exact values; otherwise, <c>false</c> to compare normalized values.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.HsbColor32Normalized)">
            <summary>
            Indicates whether the current value is equal to another <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized"/> values.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single})">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte})">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            Indicates whether the current value is equal to another color model object.
            </summary>
            <param name="other">A color model to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to another color model object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(System.Drawing.Color)">
            <summary>
            Indicates whether the current value is equal to a <seealso cref="T:System.Drawing.Color"/> object.
            </summary>
            <param name="other">A <seealso cref="T:System.Drawing.Color"/> object to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to the specified <seealso cref="T:System.Drawing.Color"/> object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(System.Windows.Media.Color)">
            <summary>
            Indicates whether the current value is equal to a <seealso cref="T:System.Windows.Media.Color"/> object.
            </summary>
            <param name="other">A <seealso cref="T:System.Windows.Media.Color"/> object to compare with this value.</param>
            <returns><c>true</c> if the current value is equal to the specified <seealso cref="T:System.Windows.Media.Color"/> object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(System.Int32)">
            <summary>
            Indicates whether the AHSB integer value for the current color is equal to an <seealso cref="T:System.Int32"/> value.
            </summary>
            <param name="other">An integer value to compare with the current color's AHSB value.</param>
            <returns><c>true</c> the AHSB integer value for the current color is equal to an <seealso cref="T:System.Int32"/> value; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.Equals(System.Object)">
            <summary>
            Indicates whether the current value is equal to another object.
            </summary>
            <param name="obj">An object to compare with the current value.</param>
            <returns><c>true</c> if the current value is equal to object; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte}})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Byte" /> component values with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Byte" /> component values with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Byte" /> component values with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Byte" /> component values with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Byte" /> component values with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Byte" /> component values with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.ToAHSB">
            <summary>
            Gets the AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized" /> value.
            </summary>
            <returns>The AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized" /> value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColor32Normalized.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.HsbColorF">
            <summary>
            Model representing a color in terms of hue, saturation and brightness as floating-point values.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorF.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorF.Hue">
            <summary>
            The hue of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorF.Saturation">
            <summary>
            The color saturation.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorF.Brightness">
            <summary>
            The brightness of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.#ctor(Erwine.Leonard.T.GDIPlus.HsbColor32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="ahsb"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.AsHsb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.AsRgb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.AsRgbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.AsNormalized">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.HsbColorF)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single}})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (1.0 - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (1.0 - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ToAHSB">
            <summary>
            Gets the AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value.
            </summary>
            <returns>The AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF" /> value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ToPercentParameterString(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.ToPercentParameterString(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="h"></param>
            <param name="s"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorF.TryParse(System.String,Erwine.Leonard.T.GDIPlus.HsbColorF@)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Hue">
            <summary>
            The hue of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Saturation">
            <summary>
            The color saturation.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Brightness">
            <summary>
            The brightness of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="brightness"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(Erwine.Leonard.T.GDIPlus.RgbColorF)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(Erwine.Leonard.T.GDIPlus.RgbColor32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(Erwine.Leonard.T.GDIPlus.HsbColorF)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="ahsb"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.AsHsb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.AsRgb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.AsRgbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.HsbColorFNormalized)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single}})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Single" /> component values with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Single" /> with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Single" /> with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Single" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (1.0 - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Single" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> with <seealso cref="T:System.Single" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (1.0 - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.ToAHSB">
            <summary>
            Gets the AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized" /> value.
            </summary>
            <returns>The AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized" /> value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.HsbColorFNormalized.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.IColorModel">
            <summary>
            Interface for models representing a specific color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IColorModel.IsNormalized">
            <summary>
            Determines whether the current value contains normalized values.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IColorModel.DefaultStringFormat">
            <summary>
            Gets the default formatted string format.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.AsHsb32">
            <summary>
            Returns the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> as a <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32"/> value.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColor32"/> value that represents the same color as the current <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.AsHsbF">
            <summary>
            Returns the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> as a <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF"/> value.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.HsbColorF"/> value that represents the same color as the current <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.AsRgb32">
            <summary>
            Returns the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> as a <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32"/> value.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32"/> value that represents the same color as the current <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.AsRgbF">
            <summary>
            Returns the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> as a <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF"/> value.
            </summary>
            <returns>A <seealso cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF"/> value that represents the same color as the current <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.AsNormalized">
            <summary>
            Returns the current value as a value with its component values normalized for accurate comparison operations.
            </summary>
            <returns>The current value as a value with its component values normalized for accurate comparison operations.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            Merges the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> with other <seealso cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> objects by averaging average their values.
            </summary>
            <param name="other"><see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> models to merge with the current.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> model representing the average of all the meged color models.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            Determines whether the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> is equivalent to another <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> value.
            </summary>
            <param name="other">Other <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/> to compare.</param>
            <param name="exact"><c>true</c> to perform an exact comparison; otherwise <c>false</c> to compare in terms of the lowest precision.</param>
            <returns><c>true</c> if the <paramref name="other"/> is equivalent to the current <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.IColorModel`1">
            <summary>
            Interface for models representing a specific color.
            </summary>
            <typeparam name="T">The component value type.</typeparam>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IColorModel`1.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel`1.AsNormalized">
            <summary>
            Returns the current value as normalized.
            </summary>
            <returns>The current value with normalized component values.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel`1.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel`1" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel`1" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel`1.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel`1" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel`1" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IColorModel`1.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel`1" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IColorModel`1" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1">
            <summary>
            Represents a color as an HSB (Hue,Saturation,Brightness) color model.
            </summary>
            <typeparam name="T">The value type for the HSB componente values.</typeparam>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.Hue">
            <summary>
            The hue of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.Saturation">
            <summary>
            The color saturation.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.Brightness">
            <summary>
            The brightness of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IHsbColorModel{`0}})">
            <summary>
            Merges the current <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> with other <seealso cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> objects by averaging average their values.
            </summary>
            <param name="other"><see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> models to merge with the current.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> model representing the average of all the meged color models.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{`0},System.Boolean)">
            <summary>
            Determines whether the current <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> is equivalent to another <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> value.
            </summary>
            <param name="other">Other <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/> to compare.</param>
            <param name="exact"><c>true</c> to perform an exact comparison; otherwise <c>false</c> to compare in terms of the lowest precision.</param>
            <returns><c>true</c> if the <paramref name="other"/> is equivalent to the current <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1.ToAHSB">
            <summary>
            Gets the AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value.
            </summary>
            <returns>The AHSB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.IHsbColorModel`1" /> value.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1">
            <summary>
            Represents a color as an RGB (Red,Green,Blue) color model.
            </summary>
            <typeparam name="T">The value type for the RGB component values.</typeparam>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.Red">
            <summary>
            The intensity of the red color layer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.Green">
            <summary>
            The intensity of the green color layer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.Blue">
            <summary>
            The intensity of the blue color layer.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IRgbColorModel{`0}})">
            <summary>
            Merges the current <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> with other <seealso cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> objects by averaging average their values.
            </summary>
            <param name="other"><see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> models to merge with the current.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> model representing the average of all the meged color models.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{`0},System.Boolean)">
            <summary>
            Determines whether the current <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> is equivalent to another <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> value.
            </summary>
            <param name="other">Other <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/> to compare.</param>
            <param name="exact"><c>true</c> to perform an exact comparison; otherwise <c>false</c> to compare in terms of the lowest precision.</param>
            <returns><c>true</c> if the <paramref name="other"/> is equivalent to the current <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1.ToARGB">
            <summary>
            Gets the ARGB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value.
            </summary>
            <returns>The ARGB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.IRgbColorModel`1" /> value.</returns>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.ExifPropertyTypeAttribute.Count">
            <summary>
            Number of values or zero for variable-length strings.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.ExifPropertyTag">
            <summary>
            Represents EXIF image property tag values.
            </summary>
            <remarks>Many of the definitions were obtained from the document at https://msdn.microsoft.com/en-us/library/ms534416.aspx.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Unknown">
            <summary>
            Unknown property type
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsVer">
            <summary>
            Version of the Global Positioning Systems (GPS) IFD, given as 2.0.0.0.
            </summary>
            <remarks>This tag is mandatory when the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsIFD" /> tag is present. When the version is 2.0.0.0, the tag value is 0x02000000.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsLatitudeRef">
            <summary>
            Specifies whether the latitude is north or south.
            </summary>
            <remarks>one character plus the NULL terminator.
            <para>N specifies north latitude, and S specifies south latitude.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsLatitude">
            <summary>
            Latitude.
            </summary>
            <remarks>Latitude is expressed as three rational values giving the degrees, minutes, and seconds respectively.
            When degrees, minutes, and seconds are expressed, the format is dd/1, mm/1, ss/1.
            When degrees and minutes are used and, for example, fractions of minutes are given up to two decimal places, the format is dd/1, mmmm/100, 0/1.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsLongitudeRef">
            <summary>
            Specifies whether the longitude is east or west longitude.
            </summary>
            <remarks>one character plus the NULL terminator.
            <para>E specifies east longitude, and W specifies west longitude.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsLongitude">
            <summary>
            Longitude.
            </summary>
            <remarks>Longitude is expressed as three rational values giving the degrees, minutes, and seconds respectively.
            When degrees, minutes and seconds are expressed, the format is ddd/1, mm/1, ss/1.
            When degrees and minutes are used and, for example, fractions of minutes are given up to two decimal places, the format is ddd/1, mmmm/100, 0/1.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsAltitudeRef">
            <summary>
            Reference altitude, in meters.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsAltitude">
            <summary>
            Altitude, in meters, based on the reference altitude specified by <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsAltitudeRef" />.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsGpsTime">
            <summary>
            Time as coordinated universal time (UTC).
            </summary>
            <remarks>The value is expressed as three rational numbers that give the hour, minute, and second.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsGpsSatellites">
            <summary>
            Specifies the GPS satellites used for measurements.
            </summary>
            <remarks>This tag can be used to specify the ID number, angle of elevation, azimuth, SNR, and other information about each satellite.
            The format is not specified. If the GPS receiver is incapable of taking measurements, the value of the tag must be set to NULL.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsGpsStatus">
            <summary>
            Specifies the status of the GPS receiver when the image is recorded.
            </summary>
            <remarks>one character plus the NULL terminator.
            <para>><list type="bullet">
            <item><term>A</term><description>means measurement is in progress.</description></item>
            <item><term>V</term><description>means the measurement is Interoperability.</description></item>
            </list></para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsGpsMeasureMode">
            <summary>
            Specifies the GPS measurement mode.
            </summary>
            <remarks><list type="number">
            <item><term>2</term><description>specifies 2-D measurement.</description></item>
            <item><term>3</term><description>specifies 3-D measurement.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsGpsDop">
            <summary>
            GPS DOP (data degree of precision).
            </summary>
            <remarks>An HDOP value is written during 2-D measurement, and a PDOP value is written during 3-D measurement.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsSpeedRef">
            <summary>
            Specifies the unit used to express the GPS receiver speed of movement.
            </summary>
            <remarks><list type="number">
            <item><term>K</term><description>represents kilometers per hour.</description></item>
            <item><term>M</term><description>represents miles per hour.</description></item>
            <item><term>N</term><description>represents knots.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsSpeed">
            <summary>
            Speed of the GPS receiver movement.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsTrackRef">
            <summary>
            Specifies the reference for giving the direction of GPS receiver movement.
            </summary>
            <remarks><list type="number">
            <item><term>T</term><description>specifies true direction.</description></item>
            <item><term>M</term><description>specifies magnetic direction.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsTrack">
            <summary>
            Direction of GPS receiver movement.
            </summary>
            <remarks>The range of values is from 0.00 to 359.99.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsImgDirRef">
            <summary>
            Specifies the reference for the direction of the image when it is captured.
            </summary>
            <remarks><list type="number">
            <item><term>T</term><description>specifies true direction.</description></item>
            <item><term>M</term><description>specifies magnetic direction.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsImgDir">
            <summary>
            Direction of the image when it was captured.
            </summary>
            <remarks>The range of values is from 0.00 to 359.99.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsMapDatum">
            <summary>
            Specifies geodetic survey data used by the GPS receiver.
            </summary>
            <remarks>If the survey data is restricted to Japan, the value of this tag is TOKYO or WGS-84.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestLatRef">
            <summary>
            Specifies whether the latitude of the destination point is north or south latitude.
            </summary>
            <remarks>N specifies north latitude, and S specifies south latitude.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestLat">
            <summary>
            Latitude of the destination point.
            </summary>
            <remarks>The latitude is expressed as three rational values giving the degrees, minutes, and seconds respectively.
            When degrees, minutes, and seconds are expressed, the format is dd/1, mm/1, ss/1.
            When degrees and minutes are used and, for example, fractions of minutes are given up to two decimal places, the format is dd/1, mmmm/100, 0/1.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestLongRef">
            <summary>
            Specifies whether the longitude of the destination point is east or west longitude.
            </summary>
            <remarks>E specifies east longitude, and W specifies west longitude.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestLong">
            <summary>
            Longitude of the destination point.
            </summary>
            <remarks>The longitude is expressed as three rational values giving the degrees, minutes, and seconds respectively.
            When degrees, minutes, and seconds are expressed, the format is ddd/1, mm/1, ss/1.
            When degrees and minutes are used and, for example, fractions of minutes are given up to two decimal places, the format is ddd/1, mmmm/100, 0/1.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestBearRef">
            <summary>
            Specifies the reference used for giving the bearing to the destination point.
            </summary>
            <remarks>one character plus the NULL terminator.
            <para>T specifies true direction, and M specifies magnetic direction.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestBear">
            <summary>
            Bearing to the destination point.
            </summary>
            <remarks>The range of values is from 0.00 to 359.99.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestDistRef">
            <summary>
            Specifies the unit used to express the distance to the destination point.
            </summary>
            <remarks>one character plus the NULL terminator.
            <para>K, M, and N represent kilometers, miles, and knots respectively.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsDestDist">
            <summary>
            Distance to the destination point.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.NewSubfileType">
            <summary>
            Type of data in a subfile.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SubfileType">
            <summary>
            Type of data in a subfile.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ImageWidth">
            <summary>
            Number of pixels per row.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ImageHeight">
            <summary>
            Number of pixel rows.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.BitsPerSample">
            <summary>
            Number of bits per color component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Compression">
            <summary>
            Compression scheme used for the image data.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PhotometricInterp">
            <summary>
            How pixel data will be interpreted.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThreshHolding">
            <summary>
            Technique used to convert from gray pixels to black and white pixels.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.CellWidth">
            <summary>
            Width of the dithering or halftoning matrix.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.CellHeight">
            <summary>
            Height of the dithering or halftoning matrix.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.FillOrder">
            <summary>
            Logical order of bits in a byte.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.DocumentName">
            <summary>
            Specifies the name of the document from which the image was scanned.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ImageDescription">
            <summary>
            Specifies the title of the image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.EquipMake">
            <summary>
            Specifies the manufacturer of the equipment used to record the image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.EquipModel">
            <summary>
            Specifies the model name or model number of the equipment used to record the image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.StripOffsets">
            <summary>
            For each strip, the byte offset of that strip.
            </summary>
            <remarks>Number of strips.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.RowsPerStrip" /> and <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.StripBytesCount" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Orientation">
            <summary>
            Image orientation viewed in terms of rows and columns.
            </summary>
            <remarks><list type="number">
                <item><term>1</term><description>The 0th row is at the top of the visual image, and the 0th column is the visual left side.</description></item>
                <item><term>2</term><description>The 0th row is at the visual top of the image, and the 0th column is the visual right side.</description></item>
                <item><term>3</term><description>The 0th row is at the visual bottom of the image, and the 0th column is the visual right side.</description></item>
                <item><term>4</term><description>The 0th row is at the visual bottom of the image, and the 0th column is the visual left side.</description></item>
                <item><term>5</term><description>The 0th row is the visual left side of the image, and the 0th column is the visual top.</description></item>
                <item><term>6</term><description>The 0th row is the visual right side of the image, and the 0th column is the visual top.</description></item>
                <item><term>7</term><description>The 0th row is the visual right side of the image, and the 0th column is the visual bottom.</description></item>
                <item><term>8</term><description>The 0th row is the visual left side of the image, and the 0th column is the visual bottom.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel">
            <summary>
            Number of color components per pixel.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.RowsPerStrip">
            <summary>
            Number of rows per strip.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.StripBytesCount" /> and <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.StripOffsets" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.StripBytesCount">
            <summary>
            For each strip, the total number of bytes in that strip.
            </summary>
            <remarks>Number of strips.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.MinSampleValue">
            <summary>
            For each color component, the minimum value assigned to that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.MaxSampleValue">
            <summary>
            For each color component, the maximum value assigned to that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.XResolution">
            <summary>
            Number of pixels per unit in the image width (x) direction.
            </summary>
            <remarks>The unit is specified by <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YResolution">
            <summary>
            Number of pixels per unit in the image height (y) direction.
            </summary>
            <remarks>The unit is specified by <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PlanarConfig">
            <summary>
            Whether pixel components are recorded in chunky or planar format.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PageName">
            <summary>
            Specifies the name of the page from which the image was scanned.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.XPosition">
            <summary>
            Offset from the left side of the page to the left side of the image.
            </summary>
            <remarks>The unit of measure is specified by <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YPosition">
            <summary>
            Offset from the top of the page to the top of the image.
            </summary>
            <remarks>The unit of measure is specified by <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.FreeOffset">
            <summary>
            For each string of contiguous unused bytes, the byte offset of that string.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.FreeByteCounts">
            <summary>
            For each string of contiguous unused bytes, the number of bytes in that string.
            </summary>
            <remarks>Number of strings of contiguous unused bytes.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GrayResponseUnit">
            <summary>
            Precision of the number specified by <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GrayResponseCurve" />.
            </summary>
            <remarks>1 specifies tenths, 2 specifies hundredths, 3 specifies thousandths, and so on.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GrayResponseCurve">
            <summary>
            For each possible pixel value in a grayscale image, the optical density of that pixel value.
            </summary>
            <remarks>Number of possible pixel values.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.T4Option">
            <summary>
            Set of flags that relate to T4 encoding.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.T6Option">
            <summary>
            Set of flags that relate to T6 encoding.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionUnit">
            <summary>
            Unit of measure for the horizontal resolution and the vertical resolution.
            </summary>
            <remarks>2 - inch 3 - centimeter.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PageNumber">
            <summary>
            Page number of the page from which the image was scanned.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TransferFunction">
            <summary>
            Tables that specify transfer functions for the image.
            </summary>
            <remarks>Total number of 16-bit words required for the tables.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SoftwareUsed">
            <summary>
            Specifies the name and version of the software or firmware of the device used to generate the image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.DateTime">
            <summary>
            Date and time the image was created.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Artist">
            <summary>
            Specifies the name of the person who created the image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HostComputer">
            <summary>
            Specifies the computer and/or operating system used to create the image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Predictor">
            <summary>
            Type of prediction scheme that was applied to the image data before the encoding scheme was applied.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.WhitePoint">
            <summary>
            Chromaticity of the white point of the image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrimaryChromaticities">
            <summary>
            For each of the three primary colors in the image, the chromaticity of that color.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ColorMap">
            <summary>
            Color palette (lookup table) for a palette-indexed image.
            </summary>
            <remarks>Number of 16-bit words required for the palette.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneHints">
            <summary>
            Information used by the halftone function
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TileWidth">
            <summary>
            Number of pixel columns in each tile.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TileLength">
            <summary>
            Number of pixel rows in each tile.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TileOffset">
            <summary>
            For each tile, the byte offset of that tile.
            </summary>
            <remarks>Number of tiles.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TileByteCounts">
            <summary>
            For each tile, the number of bytes in that tile.
            </summary>
            <remarks>Number of tiles.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.InkSet">
            <summary>
            Set of inks used in a separated image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.InkNames">
            <summary>
            Sequence of concatenated, null-terminated, character strings that specify the names of the inks used in a separated image.
            </summary>
            <remarks>Total length of the sequence of strings including the NULL terminators.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.NumberOfInks">
            <summary>
            Number of inks.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.DotRange">
            <summary>
            Color component values that correspond to a 0 percent dot and a 100 percent dot.
            </summary>
            <remarks>2 or 2×<see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TargetPrinter">
            <summary>
            Null-terminated character string that describes the intended printing environment.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExtraSamples">
            <summary>
            Number of extra color components.
            </summary>
            <remarks>For example, one extra component might hold an alpha value.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SampleFormat">
            <summary>
            For each color component, the numerical format (unsigned, signed, floating point) of that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SMinSampleValue">
            <summary>
            For each color component, the minimum value of that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SMaxSampleValue">
            <summary>
            For each color component, the maximum value of that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TransferRange">
            <summary>
            Table of values that extends the range of the transfer function.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGProc">
            <summary>
            JPEG compression process.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGInterFormat">
            <summary>
            Offset to the start of a JPEG bitstream.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGInterLength">
            <summary>
            Length, in bytes, of the JPEG bitstream.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGRestartInterval">
            <summary>
            Length of the restart interval.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGLosslessPredictors">
            <summary>
            For each color component, a lossless predictor-selection value for that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGPointTransforms">
            <summary>
            For each color component, a point transformation value for that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGQTables">
            <summary>
            For each color component, the offset to the quantization table for that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGDCTables">
            <summary>
            For each color component, the offset to the DC Huffman table (or lossless Huffman table) for that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGACTables">
            <summary>
            For each color component, the offset to the AC Huffman table for that component.
            </summary>
            <remarks>Number of samples (components) per pixel.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YCbCrCoefficients">
            <summary>
            Coefficients for transformation from RGB to YCbCr image data.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YCbCrSubsampling">
            <summary>
            Sampling ratio of chrominance components in relation to the luminance component.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YCbCrPositioning">
            <summary>
            Position of chrominance components in relation to the luminance component.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.REFBlackWhite">
            <summary>
            Reference black point value and reference white point value.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Gamma">
            <summary>
            Gamma value attached to the image.
            </summary>
            <remarks>The gamma value is stored as a rational number (pair of long) with a numerator of 100000. For example, a gamma value of 2.2 is stored as the pair (100000, 45455).</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ICCProfileDescriptor">
            <summary>
            Null-terminated character string that identifies an ICC profile.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.SRGBRenderingIntent">
            <summary>
            Saturation intent, which is suitable for charts and graphs, preserves saturation at the expense of hue and lightness.
            </summary>
            <remarks><list type="number">
                <item><term>0</term><description>perceptual</description></item>
                <item><term>1</term><description>relative colorimetric</description></item>
                <item><term>2</term><description>saturation</description></item>
                <item><term>3</term><description>absolute colorimetric.</description></item>
            </list>
            <para>Absolute colorimetric intent is suitable for proofs (previews of images destined for a different display device) that require preservation of 
            absolute colorimetry.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ImageTitle">
            <summary>
            Specifies the title of the image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionXUnit">
            <summary>
            Units in which to display horizontal resolution.
            </summary>
            <remarks><list type="number">
                <item><term>1</term><description>pixels per inch</description></item>
                <item><term>2</term><description>pixels per centimeter.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionYUnit">
            <summary>
            Units in which to display vertical resolution.
            </summary>
            <remarks><list type="number">
                <item><term>1</term><description>pixels per inch</description></item>
                <item><term>2</term><description>pixels per centimeter.</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionXLengthUnit">
            <summary>
            Units in which to display the image width.
            </summary>
            <remarks>1 - inches 2 - centimeters 3 - points 4 - picas 5 - columns.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionYLengthUnit">
            <summary>
            Units in which to display the image height.
            </summary>
            <remarks><list type="number">
                <item><term>1</term><description>inches</description></item>
                <item><term>2</term><description>centimeters</description></item>
                <item><term>3</term><description>points</description></item>
                <item><term>4</term><description>picas</description></item>
                <item><term>5</term><description>columns</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrintFlags">
            <summary>
            Sequence of one-byte Boolean values that specify printing options.
            </summary>
            <remarks>Number of flags.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrintFlagsVersion">
            <summary>
            Print flags version.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrintFlagsCrop">
            <summary>
            Print flags center crop marks.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrintFlagsBleedWidth">
            <summary>
            Print flags bleed width.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrintFlagsBleedWidthScale">
            <summary>
            Print flags bleed width scale.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneLPI">
            <summary>
            Ink's screen frequency, in lines per inch.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneLPIUnit">
            <summary>
            Units for the screen frequency.
            </summary>
            <remarks>1 - lines per inch 2 - lines per centimeter.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneDegree">
            <summary>
            Angle for screen.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneShape">
            <summary>
            Shape of the halftone dots.
            </summary>
            <remarks>0 - round 1 - ellipse 2 - line 3 - square 4 - cross 6 - diamond.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneMisc">
            <summary>
            Miscellaneous halftone information.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.HalftoneScreen">
            <summary>
            Boolean value that specifies whether to use the printer's default screens.
            </summary>
            <remarks>1 - use printer's default screens 2 - other.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.JPEGQuality">
            <summary>
            Private tag used by the Adobe Photoshop format.
            </summary>
            <remarks>Not for public use.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GridSize">
            <summary>
            Block of information about grids and guides.
            </summary>
            <remarks>Any.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailFormat">
            <summary>
            Format of the thumbnail image.
            </summary>
            <remarks>0 - raw RGB 1 - JPEG.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailWidth">
            <summary>
            Width, in pixels, of the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailHeight">
            <summary>
            Height, in pixels, of the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailColorDepth">
            <summary>
            bits per pixel (BPP) for the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailPlanes">
            <summary>
            Number of color planes for the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailRawBytes">
            <summary>
            Byte offset between rows of pixel data.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailSize">
            <summary>
            Total size, in bytes, of the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailCompressedSize">
            <summary>
            Compressed size, in bytes, of the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ColorTransferFunction">
            <summary>
            Table of values that specify color transfer functions.
            </summary>
            <remarks>Any.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailData">
            <summary>
            Raw thumbnail bits in JPEG or RGB format.
            </summary>
            <remarks>Count Depends on <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailFormat" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailImageWidth">
            <summary>
            Number of pixels per row in the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailImageHeight">
            <summary>
            Number of pixel rows in the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailBitsPerSample">
            <summary>
            Number of bits per color component in the thumbnail image.
            </summary>
            <remarks>Number of samples (components) per pixel in the thumbnail image.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailSamplesPerPixel" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailCompression">
            <summary>
            Compression scheme used for thumbnail image data.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailPhotometricInterp">
            <summary>
            How thumbnail pixel data will be interpreted.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailImageDescription">
            <summary>
            Specifies the title of the image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailEquipMake">
            <summary>
            Specifies the manufacturer of the equipment used to record the thumbnail image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailEquipModel">
            <summary>
            Specifies the model name or model number of the equipment used to record the thumbnail image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailStripOffsets">
            <summary>
            For each strip in the thumbnail image, the byte offset of that strip.
            </summary>
            <remarks>Number of strips.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailRowsPerStrip" /> and <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailStripBytesCount" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailOrientation">
            <summary>
            Thumbnail image orientation in terms of rows and columns.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Orientation" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailSamplesPerPixel">
            <summary>
            Number of color components per pixel in the thumbnail image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailRowsPerStrip">
            <summary>
            Number of rows per strip in the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailStripBytesCount" /> and <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailStripOffsets" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailStripBytesCount">
            <summary>
            For each thumbnail image strip, the total number of bytes in that strip.
            </summary>
            <remarks>Number of strips in the thumbnail image.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailResolutionX">
            <summary>
            Thumbnail resolution in the width direction.
            </summary>
            <remarks>The resolution unit is given in <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailResolutionY">
            <summary>
            Thumbnail resolution in the height direction.
            </summary>
            <remarks>The resolution unit is given in <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailPlanarConfig">
            <summary>
            Whether pixel components in the thumbnail image are recorded in chunky or planar format.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PlanarConfig" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailResolutionUnit">
            <summary>
            Unit of measure for the horizontal resolution and the vertical resolution of the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ResolutionUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailTransferFunction">
            <summary>
            Tables that specify transfer functions for the thumbnail image.
            </summary>
            <remarks>Total number of 16-bit words required for the tables.
            <para>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.TransferFunction" />.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailSoftwareUsed">
            <summary>
            Specifies the name and version of the software or firmware of the device used to generate the thumbnail image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailDateTime">
            <summary>
            Date and time the thumbnail image was created.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.DateTime" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailArtist">
            <summary>
            Specifies the name of the person who created the thumbnail image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailWhitePoint">
            <summary>
            Chromaticity of the white point of the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.WhitePoint" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailPrimaryChromaticities">
            <summary>
            For each of the three primary colors in the thumbnail image, the chromaticity of that color.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PrimaryChromaticities" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailYCbCrCoefficients">
            <summary>
            Coefficients for transformation from RGB to YCbCr data for the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YCbCrCoefficients" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailYCbCrSubsampling">
            <summary>
            Sampling ratio of chrominance components in relation to the luminance component for the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YCbCrSubsampling" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailYCbCrPositioning">
            <summary>
            Position of chrominance components in relation to the luminance component for the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.YCbCrPositioning" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailRefBlackWhite">
            <summary>
            Reference black point value and reference white point value for the thumbnail image.
            </summary>
            <remarks>See <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.REFBlackWhite" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ThumbnailCopyRight">
            <summary>
            Contains copyright information for the thumbnail image.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.LuminanceTable">
            <summary>
            Luminance table.
            </summary>
            <remarks>The luminance table and the chrominance table are used to control JPEG quality.
            A valid luminance or chrominance table has 64 entries of type <see cref="T:System.Int16" />.
            If an image has either a luminance table or a chrominance table, then it must have both tables.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ChrominanceTable">
            <summary>
            Chrominance table.
            </summary>
            <remarks>The luminance table and the chrominance table are used to control JPEG quality.
            A valid luminance or chrominance table has 64 entries of type <see cref="T:System.Int16" />.
            If an image has either a luminance table or a chrominance table, then it must have both tables.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.FrameDelay">
            <summary>
            Time delay, in hundredths of a second, between two frames in an animated GIF image.
            </summary>
            <remarks>Number of frames in the image.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.LoopCount">
            <summary>
            For an animated GIF image, the number of times to display the animation.
            </summary>
            <remarks>A value of 0 specifies that the animation should be displayed infinitely.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GlobalPalette">
            <summary>
            Color palette for an indexed bitmap in a GIF image.
            </summary>
            <remarks>3 x number of palette entries.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.IndexBackground">
            <summary>
            Index of the background color in the palette of a GIF image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.IndexTransparent">
            <summary>
            Index of the transparent color in the palette of a GIF image.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PixelUnit">
            <summary>
            Unit for <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PixelPerUnitX" /> and <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PixelPerUnitY" />.
            </summary>
            <remarks>0 - unknown.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PixelPerUnitX">
            <summary>
            Pixels per unit in the x direction.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PixelPerUnitY">
            <summary>
            Pixels per unit in the y direction.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PaletteHistogram">
            <summary>
            Palette histogram.
            </summary>
            <remarks>Length of the histogram.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.Copyright">
            <summary>
            Null-terminated character string that contains copyright information.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifExposureTime">
            <summary>
            Exposure time, measured in seconds.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFNumber">
            <summary>
            F number.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifIFD">
            <summary>
            Private tag used by GDI+.
            </summary>
            <remarks>Not for public use. GDI+ uses this tag to locate Exif-specific information.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ICCProfile">
            <summary>
            ICC profile embedded in the image.
            </summary>
            <remarks>Length of the profile.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifExposureProg">
            <summary>
            Class of the program used by the camera to set exposure when the picture is taken.
            </summary>
            <remarks>Default is 0
            <list type="number">
                <item><term>0</term><description>not defined</description></item>
                <item><term>1</term><description>manual</description></item>
                <item><term>2</term><description>normal program</description></item>
                <item><term>3</term><description>aperture priority</description></item>
                <item><term>4</term><description>shutter priority</description></item>
                <item><term>5</term><description>creative program (biased toward depth of field)</description></item>
                <item><term>6</term><description>action program (biased toward fast shutter speed)</description></item>
                <item><term>7</term><description>portrait mode (for close-up photos with the background out of focus)</description></item>
                <item><term>8</term><description>landscape mode (for landscape photos with the background in focus)</description></item>
            </list>
            9 to 255 - reserved.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifSpectralSense">
            <summary>
            Specifies the spectral sensitivity of each channel of the camera used.
            </summary>
            <remarks>Length of the string including the NULL terminator.
            <para>The string is compatible with the standard developed by the ASTM Technical Committee.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.GpsIFD">
            <summary>
            Offset to a block of GPS property items.
            </summary>
            <remarks>Property items whose tags have the prefix Gps are stored in the GPS block.
            The GPS property items are defined in the EXIF specification. GDI+ uses this tag to locate GPS information, but GDI+ does not expose this tag for public use.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifISOSpeed">
            <summary>
            ISO speed and ISO latitude of the camera or input device as specified in ISO 12232.
            </summary>
            <remarks>Any.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifOECF">
            <summary>
            Optoelectronic conversion function (OECF) specified in ISO 14524.
            </summary>
            <remarks>Any.
            <para>The OECF is the relationship between the camera optical input and the image values.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifVer">
            <summary>
            Version of the EXIF standard supported.
            </summary>
            <remarks>Default	0210.
            <para>Nonexistence of this field is taken to mean nonconformance to the standard.
            Conformance to the standard is indicated by recording 0210 as a 4-byte ASCII string. Because the type is undefined, there is no NULL terminator.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTOrig">
            <summary>
            Date and time when the original image data was generated.
            </summary>
            <remarks>For a DSC, the date and time when the picture was taken.
            The format is YYYY:MM:DD HH:MM:SS with time shown in 24-hour format and the date and time separated by one blank character (0x2000).
            The character string length is 20 bytes including the NULL terminator. When the field is empty, it is treated as unknown.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTDigitized">
            <summary>
            Date and time when the image was stored as digital data.
            </summary>
            <remarks>If, for example, an image was captured by DSC and at the same time the file was recorded, then DateTimeOriginal and DateTimeDigitized will have the same contents.
            The format is YYYY:MM:DD HH:MM:SS with time shown in 24-hour format and the date and time separated by one blank character (0x2000).
            The character string length is 20 bytes including the NULL terminator. When the field is empty, it is treated as unknown.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifCompConfig">
            <summary>
            Information specific to compressed data.
            </summary>
            <remarks>Default 4 5 6 0 (if RGB uncompressed) 1 2 3 0 (other cases) 0 - does not exist 1 - Y 2 - Cb 3 - Cr 4 - R 5 - G 6 - B Other - reserved.
            <para>The channels of each component are arranged in order from the first component to the fourth.
            For uncompressed data, the data arrangement is given in the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PhotometricInterp" /> tag.
            However, because <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.PhotometricInterp" /> can only express the order of Y, Cb, and Cr, this tag is provided for cases when compressed data uses components
            other than Y, Cb, and Cr and to support other sequences.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifCompBPP">
            <summary>
            Information specific to compressed data.
            </summary>
            <remarks>The compression mode used for a compressed image is indicated in unit BPP.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifShutterSpeed">
            <summary>
            Shutter speed.
            </summary>
            <remarks>The unit is the Additive System of Photographic Exposure (APEX) value.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifAperture">
            <summary>
            Lens aperture.
            </summary>
            <remarks>The unit is the APEX value.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifBrightness">
            <summary>
            Brightness value.
            </summary>
            <remarks>The unit is the APEX value. Ordinarily it is given in the range of -99.99 to 99.99.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifExposureBias">
            <summary>
            Exposure bias.
            </summary>
            <remarks>The unit is the APEX value. Ordinarily it is given in the range -99.99 to 99.99.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifMaxAperture">
            <summary>
            Smallest F number of the lens.
            </summary>
            <remarks>The unit is the APEX value. Ordinarily it is given in the range of 00.00 to 99.99, but it is not limited to this range.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifSubjectDist">
            <summary>
            Distance to the subject, measured in meters.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifMeteringMode">
            <summary>
            Metering mode.
            </summary>
            <remarks>Default	0 0 - unknown 1 - Average 2 - CenterWeightedAverage 3 - Spot 4 - MultiSpot 5 - Pattern 6 - Partial 7 to 254 - reserved 255 - other.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifLightSource">
            <summary>
            Type of light source.
            </summary>
            <remarks>Default	0 0 - unknown 1 - Daylight 2 - Flourescent 3 - Tungsten 17 - Standard Light A 18 - Standard Light B 19 - Standard Light C 20 - D55 21 - D65 22 - D75 23 to 254 - reserved 255 - other.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFlash">
            <summary>
            Flash status.
            </summary>
            <remarks>Values for bit 0 that indicate whether the flash fired:<list type="table">
                <item><term>0b</term><description>flash did not fire</description></item>
                <item><term>1b</term><description>flash fired</description></item>
            </list>
            Values for bits 1 and 2 that indicate the status of returned light:<list type="table">
                <item><term>00b</term><description>no strobe return detection function</description></item>
                <item><term>01b</term><description>reserved</description></item>
                <item><term>10b</term><description>strobe return light not detected</description></item>
                <item><term>11b</term><description>strobe return light detected</description></item>
            </list>
            Resulting flash tag values:<list type="table">
                <item><term>0x0000</term><description>flash did not fire</description></item>
                <item><term>0x0001</term><description>flash fired</description></item>
                <item><term>0x0005</term><description>strobe return light not detected.</description></item>
            </list>
            <para>This tag is recorded when an image is taken using a strobe light (flash). Bit 0 indicates the flash firing status, and bits 1 and 2 indicate the flash return status.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalLength">
            <summary>
            Actual focal length, in millimeters, of the lens.
            </summary>
            <remarks>Conversion is not made to the focal length of a 35 millimeter film camera.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifMakerNote">
            <summary>
            Note tag.
            </summary>
            <remarks>Any.
            <para>A tag used by manufacturers of EXIF writers to record information. The contents are up to the manufacturer.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifUserComment">
            <summary>
            Comment tag.
            </summary>
            <remarks>Any The character code used in the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifUserComment" /> tag is identified based on an ID code in a fixed 8-byte area at the start of the tag data area.
            The unused portion of the area is padded with null characters (0). ID codes are assigned by means of registration. Because the type is not ASCII, it is not necessary to use a NULL terminator.
            <para>A tag used by EXIF users to write keywords or comments about the image besides those in <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ImageDescription" />
            and without the character-code limitations of the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ImageDescription" /> tag.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTSubsec">
            <summary>
            Specifies a fraction of a second for the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.DateTime" /> tag.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTOrigSS">
            <summary>
            Specifies a fraction of a second for the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTOrig" /> tag.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTDigSS">
            <summary>
            Specifies a fraction of a second for the <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifDTDigitized" /> tag.
            </summary>
            <remarks>Length of the string including the NULL terminator.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFPXVer">
            <summary>
            FlashPix format version supported by an FPXR file.
            </summary>
            <remarks>Default	0100 0100 - FlashPix format version 1.0 Other - reserved.
            <para>If the FPXR function supports FlashPix format version 1.0, this is indicated similarly to <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifVer" /> by recording 0100 as a 4-byte ASCII string.
            Because the type is undefined, there is no NULL terminator.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifColorSpace">
            <summary>
            Color space specifier.
            </summary>
            <remarks>0x1 - sRGB 0xFFFF - uncalibrated Other - reserved.
            <para>Normally sRGB (=1) is used to define the color space based on the PC monitor conditions and environment.
            If a color space other than sRGB is used, Uncalibrated (=0xFFFF) is set. Image data recorded as Uncalibrated can be treated as sRGB when it is converted to FlashPix.</para></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifPixXDim">
            <summary>
            Information specific to compressed data.
            </summary>
            <remarks>When a compressed file is recorded, the valid width of the meaningful image must be recorded in this tag, whether or not there is padding data or a restart marker.
            This tag should not exist in an uncompressed file.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifPixYDim">
            <summary>
            Information specific to compressed data.
            </summary>
            <remarks>When a compressed file is recorded, the valid height of the meaningful image must be recorded in this tag whether or not there is padding data or a restart marker.
            This tag should not exist in an uncompressed file.
            Because data padding is unnecessary in the vertical direction, the number of lines recorded in this valid image height tag will be the same as that recorded in the SOF.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifRelatedWav">
            <summary>
            The name of an audio file related to the image data.
            </summary>
            <remarks>The only relational information recorded is the EXIF audio file name and extension (an ASCII string that consists of 8 characters plus a period (.), plus 3 characters).
            The path is not recorded. When you use this tag, audio files must be recorded in conformance with the EXIF audio format.
            Writers can also store audio data within APP2 as FlashPix extension stream data.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifInterop">
            <summary>
            Offset to a block of property items that contain interoperability information.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFlashEnergy">
            <summary>
            Strobe energy, in Beam Candle Power Seconds (BCPS), at the time the image was captured.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifSpatialFR">
            <summary>
            Camera or input device spatial frequency table and SFR values in the image width, image height, and diagonal direction, as specified in ISO 12233.
            </summary>
            <remarks>Any.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalXRes">
            <summary>
            Number of pixels in the image width (x) direction per unit on the camera focal plane.
            </summary>
            <remarks>The unit is specified in <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalResUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalYRes">
            <summary>
            Number of pixels in the image height (y) direction per unit on the camera focal plane.
            </summary>
            <remarks>The unit is specified in <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalResUnit" />.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalResUnit">
            <summary>
            Unit of measure for <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalXRes" /> and <see cref="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFocalYRes" />.
            </summary>
            <remarks><list type="number">
                <item><term>2</term><description>inch</description></item>
                <item><term>3</term><description>centimeter</description></item>
            </list></remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifSubjectLoc">
            <summary>
            Location of the main subject in the scene.
            </summary>
            <remarks>The value of this tag represents the pixel at the center of the main subject relative to the left edge.
            The first value indicates the column number, and the second value indicates the row number.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifExposureIndex">
            <summary>
            Exposure index selected on the camera or input device at the time the image was captured.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifSensingMethod">
            <summary>
            Image sensor type on the camera or input device.
            </summary>
            <remarks><list type="number">
                <item><term>1</term><description>not defined</description></item>
                <item><term>2</term><description>one-chip color area sensor</description></item>
                <item><term>3</term><description>two-chip color area sensor</description></item>
                <item><term>4</term><description>three-chip color area sensor</description></item>
                <item><term>5</term><description>color sequential area sensor</description></item>
                <item><term>7</term><description>trilinear sensor</description></item>
                <item><term>8</term><description>color sequential linear sensor</description></item>
            </list>
            Other - reserved.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifFileSource">
            <summary>
            The image source.
            </summary>
            <remarks>If a DSC recorded the image, the value of this tag is 3.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifSceneType">
            <summary>
            The type of scene.
            </summary>
            <remarks>If a DSC recorded the image, the value of this tag must be set to 1, indicating that the image was directly photographed.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyTag.ExifCfaPattern">
            <summary>
            The color filter array (CFA) geometric pattern of the image sensor when a one-chip color area sensor is used.
            </summary>
            <remarks>It does not apply to all sensing methods.</remarks>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.ExifPropertyType">
            <summary>
            Represents EXIF image property types.
            </summary>
            <remarks>Many of the definitions were obtained from the document at https://msdn.microsoft.com/en-us/library/ms534416.aspx.</remarks>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.BestMatching">
            <summary>
            8-bit value that can take any value depending upon the field definition.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.Byte">
            <summary>
            8-bit unsigned integer
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.ASCII">
            <summary>
            8-bit byte containing one 7-bit ASCII code.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.Rational">
            <summary>
            Two consecutive 32-bit (4-byte) unsigned values, where the first value is the numerator, and teh second is the denominator.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.Long">
            <summary>
            32-bit (4-byte) unsigned integer.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.Short">
            <summary>
            16-bit (2-byte) unsigned integer.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.SLong">
            <summary>
            32-bit (4-byte) signed integer.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.ExifPropertyType.SRational">
            <summary>
            Two consecutive 32-bit (4-byte) signed values, where the first value is the numerator, and teh second is the denominator.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.ColorModel">
            <summary>
            Gets or sets the color model.
            </summary>
            <value>The color model.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.ChangeColorModel(Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel)">
            <summary>
            Changes the color model.
            </summary>
            <param name="colorModel">The color model.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            Called when a palette is about to be cached, or precached.
            </summary>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            Called when palette index is about to be retrieve for a given color.
            </summary>
            <param name="color">The color.</param>
            <param name="paletteIndex">Index of the palette.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.Prepare">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache.Prepare"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.CachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache.CachePalette(System.Collections.Generic.IList{System.Drawing.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.GetColorPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache.GetColorPaletteIndex(System.Drawing.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel.RedGreenBlue">
            <summary>
            The RGB color model is an additive color model in which red, green, and blue light is added together 
            in various ways to reproduce a broad array of colors. The name of the model comes from the initials 
            of the three additive primary colors, red, green, and blue.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel.HueSaturationBrightness">
            <summary>
            HSL is a common cylindrical-coordinate representations of points in an RGB color model, which rearrange 
            the geometry of RGB in an attempt to be more perceptually relevant than the cartesian representation.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel.LabColorSpace">
            <summary>
            A Lab color space is a color-opponent space with dimension L for lightness and a and b for the 
            color-opponent dimensions, based on nonlinearly compressed CIE XYZ color space coordinates.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel.XYZ">
            <summary>
            XYZ color space
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.#ctor(Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache"/> class.
            </summary>
            <param name="colorModel">The color model.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.EuclideanDistance.EuclideanDistanceColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache.Prepare">
            <summary>
            Prepares color cache for next use.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache.CachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            Called when a palette is about to be cached, or precached.
            </summary>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache.GetColorPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            Called when palette index is about to be retrieve for a given color.
            </summary>
            <param name="color">The color.</param>
            <param name="paletteIndex">Index of the palette.</param>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.BucketInfo.Colors">
            <summary>
            Gets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.BucketInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.BucketInfo"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.BucketInfo.AddColor(System.Int32,System.Drawing.Color)">
            <summary>
            Adds the color to the bucket informations.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <param name="color">The color.</param>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>The quality.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.#ctor(Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Common.ColorModel,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache"/> class.
            </summary>
            <param name="colorModel">The color model.</param>
            <param name="quality">The quality.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.Prepare">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.Prepare"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.LocalitySensitiveHash.LshColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeCacheNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeCacheNode"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeCacheNode.AddColor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Adds the color.
            </summary>
            <param name="color">The color.</param>
            <param name="paletteIndex">Index of the palette.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeCacheNode.GetPaletteIndex(System.Drawing.Color,System.Int32)">
            <summary>
            Gets the index of the palette.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeColorCache.IsColorModelSupported">
            <summary>
            Gets a value indicating whether this instance is color model supported.
            </summary>
            <value>
            	<c>true</c> if this instance is color model supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeColorCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeColorCache"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeColorCache.Prepare">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.Prepare"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnCachePalette(System.Collections.Generic.IList{System.Drawing.Color})"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.Octree.OctreeColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.BaseColorCache.OnGetColorPaletteIndex(System.Drawing.Color,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.ColorCount">
            <summary>
            Gets the color count.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.SourceBuffer">
            <summary>
            Gets the source buffer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.TargetBuffer">
            <summary>
            Gets the target buffer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.Quantizer">
            <summary>
            Gets the quantizer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CachedMatrix">
            <summary>
            Cache: Access to already created coeficient matrix.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CachedSummedMatrix">
            <summary>
            Cache: Access to already created coeficient matrix with division performed.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.OnCreateDefaultPathProvider">
            <summary>
            Called when a need to create default path provider arisen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.OnPrepare">
            <summary>
            Called when ditherer is about to be prepared.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix">
            <summary>
            Creates the coeficient matrix.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.OnProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)">
            <summary>
            Allows ditherer to process image per pixel, with ability to access the rest of the image.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.OnFinish">
            <summary>
            Called when dithering is finished.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.GetPointPath(System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.PathProviders.IPathProvider.GetPointPath(System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.IsInplace">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.IsInplace"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer,System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer,System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.GetPointPath">
            <summary>
            Retrieves the path in which to traverse 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.ProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.ProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.Finish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer,System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.AtkinsonDithering.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.AtkinsonDithering.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.AtkinsonDithering.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth">
             <summary>
             Gets the width of the matrix side.
            
                     center
                       v --------> side width = 2
             | 0 | 1 | 2 | 3 | 4 |
             </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight">
            <summary>
            Gets the height of the matrix side.
            
            --- 
             0  
            --- 
             1  &lt;- center
            --- | 
             2  | side height = 1
            --- v
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.OnProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.OnProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.IsInplace">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.IsInplace"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BurkesDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BurkesDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BurkesDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FanDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FanDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FanDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FilterLiteSierra.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FilterLiteSierra.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FilterLiteSierra.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FloydSteinbergDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FloydSteinbergDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.FloydSteinbergDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.JarvisJudiceNinkeDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.JarvisJudiceNinkeDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.JarvisJudiceNinkeDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.ShiauDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.ShiauDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.ShiauDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.SierraDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.SierraDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.SierraDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.StuckiDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.StuckiDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.StuckiDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.TwoRowSierraDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.TwoRowSierraDitherer.MatrixSideWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.TwoRowSierraDitherer.MatrixSideHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.ErrorDiffusion.BaseErrorDistributionDitherer.MatrixSideHeight"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.IsInplace">
            <summary>
            Gets a value indicating whether this ditherer uses only actually process pixel.
            </summary>
            <value>
            	<c>true</c> if this ditherer is inplace; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer,System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer,Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            Prepares this instance.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.ProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)">
            <summary>
            Processes the specified buffer.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.Finish">
            <summary>
            Finishes this instance.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth">
            <summary>
            Gets the width of the matrix.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight">
            <summary>
            Gets the height of the matrix.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.OnProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.OnProcessPixel(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.IsInplace">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.IColorDitherer.IsInplace"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BayerDitherer4.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BayerDitherer4.MatrixWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BayerDitherer4.MatrixHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BayerDitherer8.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BayerDitherer8.MatrixWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BayerDitherer8.MatrixHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.ClusteredDotDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.ClusteredDotDitherer.MatrixWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.ClusteredDotDitherer.MatrixHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.DotHalfToneDitherer.CreateCoeficientMatrix">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.BaseColorDitherer.CreateCoeficientMatrix"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.DotHalfToneDitherer.MatrixWidth">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixWidth"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.DotHalfToneDitherer.MatrixHeight">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Ditherers.Ordered.BaseOrderedDitherer.MatrixHeight"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend">
            <summary>
            The utility extender class.
            </summary>
            <summary>
            The utility extender class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.Distinct``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Selects distinct items by a given selector.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.GetPaletteColorCount(System.Drawing.Image)">
            <summary>
            Gets the palette color count.
            </summary>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.GetPalette(System.Drawing.Image)">
            <summary>
            Gets the palette of an indexed image.
            </summary>
            <param name="image">The source image.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.SetPalette(System.Drawing.Image,System.Collections.Generic.List{System.Drawing.Color})">
            <summary>
            Sets the palette of an indexed image.
            </summary>
            <param name="image">The target image.</param>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.GetBitDepth(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Gets the bit count for a given pixel format.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>The bit count.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.GetColorCount(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Gets the available color count for a given pixel format.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>The available color count.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.GetFriendlyName(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Gets the friendly name of the pixel format.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.IsIndexed(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Determines whether the specified pixel format is indexed.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if the specified pixel format is indexed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.IsSupported(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Determines whether the specified pixel format is supported.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if the specified pixel format is supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.GetFormatByColorCount(System.Int32)">
            <summary>
            Gets the format by color count.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.HasAlpha(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Determines whether the specified pixel format has an alpha channel.
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if the specified pixel format has an alpha channel; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Extensions.Extend.IsDeepColor(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Determines whether [is deep color] [the specified pixel format].
            </summary>
            <param name="pixelFormat">The pixel format.</param>
            <returns>
            	<c>true</c> if [is deep color] [the specified pixel format]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Guard.CheckNull(System.Object,System.String)">
            <summary>
            Checks if an argument is null
            </summary>
            <param name="argument">argument</param>
            <param name="argumentName">argument name</param>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.CanRead">
            <summary>
            Gets a value indicating whether this buffer can be read.
            </summary>
            <value>
              <c>true</c> if this instance can read; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.CanWrite">
            <summary>
            Gets a value indicating whether this buffer can written to.
            </summary>
            <value>
              <c>true</c> if this instance can write; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.Palette">
            <summary>
            Gets or sets the palette.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.#ctor(System.Drawing.Image,System.Drawing.Imaging.ImageLockMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.#ctor(System.Drawing.Bitmap,System.Drawing.Imaging.ImageLockMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer"/> class.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.LineTask.StartOffset">
            <summary>
            Gets or sets the start offset.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.LineTask.EndOffset">
            <summary>
            Gets or sets the end offset.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.LineTask.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer.LineTask"/> class.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel">
            <summary>
            This is a pixel format independent pixel.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.X">
            <summary>
            Gets the X.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.Y">
            <summary>
            Gets the Y.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.Parent">
            <summary>
            Gets the parent buffer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.IsIndexed">
            <summary>
            Gets a value indicating whether this instance is indexed.
            </summary>
            <value>
            	<c>true</c> if this instance is indexed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.#ctor(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel"/> struct.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.GetIndexedType(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Gets the type of the indexed pixel format.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.GetNonIndexedType(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Gets the type of the non-indexed pixel format.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.Update(System.Int32,System.Int32)">
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.ReadRawData(System.IntPtr)">
            <summary>
            Reads the raw data.
            </summary>
            <param name="imagePointer">The image pointer.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.ReadData(System.Byte[],System.Int32)">
            <summary>
            Reads the data.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.WriteRawData(System.IntPtr)">
            <summary>
            Writes the raw data.
            </summary>
            <param name="imagePointer">The image pointer.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.WriteData(System.Byte[],System.Int32)">
            <summary>
            Writes the data.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb1555">
            <summary>
            Name |     Blue     |    Green     |     Red      | Alpha (bit)
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb1555.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb1555.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb1555.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb1555.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb64">
            <summary>
            Name |                     Blue                      |                     Green                     |                      Red                      |                     Alpha                     |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|44444444444444444444444|55555555555555555555555|66666666666666666666666|77777777777777777777777|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb64.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb64.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb64.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb64.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb8888">
            <summary>
            Name |          Blue         |        Green          |           Red         |         Alpha         |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb8888.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb8888.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb8888.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataArgb8888.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataGray16">
            <summary>
            Name |                  Grayscale                    |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15| 
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataGray16.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataGray16.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataGray16.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataGray16.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb48">
            <summary>
            Name |                     Blue                      |                     Green                     |                      Red                      | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|44444444444444444444444|55555555555555555555555|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb48.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb48.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb48.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb48.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb555">
            <summary>
            Name |     Blue     |    Green     |     Red      | Unused
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb555.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb555.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb555.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb555.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb565">
            <summary>
            Name |     Blue     |      Green      |     Red      | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|
            Byte |00000000000000000000000|11111111111111111111111|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb565.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb565.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb565.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb565.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb888">
            <summary>
            Name |          Blue         |        Green          |           Red         | 
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb888.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb888.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb888.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb888.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb8888">
            <summary>
            Name |          Blue         |        Green          |           Red         |         Unused        |
            Bit  |00|01|02|03|04|05|06|07|08|09|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|
            Byte |00000000000000000000000|11111111111111111111111|22222222222222222222222|33333333333333333333333|
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb8888.Argb">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Argb"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb8888.GetColor">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.GetColor"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb8888.SetColor(System.Drawing.Color)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.SetColor(System.Drawing.Color)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.NonIndexed.PixelDataRgb8888.Value">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixels.INonIndexedPixel.Value"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.PixelTransform.SourcePixel">
            <summary>
            Gets the source pixel.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Helpers.PixelTransform.TargetPixel">
            <summary>
            Gets the target pixel.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.PixelTransform.#ctor(Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel,Erwine.Leonard.T.GDIPlus.Palette.Helpers.Pixel)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Helpers.PixelTransform"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.QuantizationHelper.PrecalculateFactors">
            <summary>
            Precalculates the alpha-fix values for all the possible alpha values (0-255).
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.QuantizationHelper.ConvertAlpha(System.Drawing.Color)">
            <summary>
            Converts the alpha blended color to a non-alpha blended color.
            </summary>
            <param name="color">The alpha blended color (ARGB).</param>
            <returns>The non-alpha blended color (RGB).</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Helpers.QuantizationHelper.ConvertAlpha(System.Drawing.Color,System.Int32@)">
            <summary>
            Converts the alpha blended color to a non-alpha blended color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.PathProviders.IPathProvider.GetPointPath(System.Int32,System.Int32)">
            <summary>
            Retrieves the path throughout the image to determine the order in which pixels will be scanned.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.ChangeCacheProvider(Erwine.Leonard.T.GDIPlus.Palette.ColorCaches.IColorCache)">
            <summary>
            Changes the cache provider.
            </summary>
            <param name="colorCache">The color cache.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.CachePalette(System.Collections.Generic.IList{System.Drawing.Color})">
            <summary>
            Caches the palette.
            </summary>
            <param name="palette">The palette.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache">
            <summary>
            Called when it is needed to create default cache (no cache is supplied from outside).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            Redirection to retrieve palette to be cached, if palette is not available yet.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.InvalidIndex">
            <summary>
            This index will represent invalid palette index.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.ChangePathProvider(Erwine.Leonard.T.GDIPlus.Palette.PathProviders.IPathProvider)">
            <summary>
            Changes the path provider.
            </summary>
            <param name="pathProvider">The path provider.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            Called when quantizer is about to be prepared for next round.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            Called when color is to be added.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnCreateDefaultPathProvider">
            <summary>
            Called when a need to create default path provider arisen.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)">
            <summary>
            Called when quantized palette is needed.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Called when get palette index for a given color should be returned.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetColorCount">
            <summary>
            Called when get color count.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnFinish">
            <summary>
            Called when about to clear left-overs after quantization.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.GetPointPath(System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.PathProviders.IPathProvider.GetPointPath(System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.AddColor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AddColor(System.Drawing.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.GetColorCount">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetColorCount"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.GetPalette(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.GetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.Finish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.Finish"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo">
            <summary>
            Stores all the informations about single color only once, to be used later.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.Color">
            <summary>
            The original color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.Count">
            <summary>
            The pixel presence count in the image.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.Hue">
            <summary>
            A hue component of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.Saturation">
            <summary>
            A saturation component of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.Brightness">
            <summary>
            A brightness component of the color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo"/> struct.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctColorInfo.IncreaseCount">
            <summary>
            Increases the count of pixels of this color.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer">
            <summary>
            This is my baby. Read more in the article on the Code Project:
            http://www.codeproject.com/KB/recipes/SimplePaletteQuantizer.aspx
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnGetColorCount">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.GetColorCount"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.OnFinish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.ColorHueComparer">
            <summary>
            Compares a hue components of a color info.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.ColorSaturationComparer">
            <summary>
            Compares a saturation components of a color info.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.DistinctSelection.DistinctSelectionQuantizer.ColorBrightnessComparer">
            <summary>
            Compares a brightness components of a color info.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer">
            <summary>
            This interface provides a color quantization capabilities.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel">
            <summary>
            Gets a value indicating whether to allow parallel processing.
            </summary>
            <value>
              <c>true</c> if to allow parallel processing; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            Prepares the quantizer for image processing.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AddColor(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Adds the color to quantizer.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetPalette(System.Int32)">
            <summary>
            Gets the palette with specified count of the colors.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Gets the index of the palette for specific color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetColorCount">
            <summary>
            Gets the color count.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.Finish">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.ColorModel">
            <summary>
            Gets the color model.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.PaletteIndex">
            <summary>
            Gets or sets the index of the palette.
            </summary>
            <value>The index of the palette.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.#ctor(System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube"/> class.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.RedSize">
            <summary>
            Gets the size of the red side of this cube.
            </summary>
            <value>The size of the red side of this cube.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.GreenSize">
            <summary>
            Gets the size of the green side of this cube.
            </summary>
            <value>The size of the green side of this cube.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.BlueSize">
            <summary>
            Gets the size of the blue side of this cube.
            </summary>
            <value>The size of the blue side of this cube.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.Color">
            <summary>
            Gets the average color from the colors contained in this cube.
            </summary>
            <value>The average color.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.Shrink">
            <summary>
            Shrinks this cube to the least dimensions that covers all the colors in the RGB space.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.SplitAtMedian(System.Byte,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube@,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube@)">
            <summary>
            Splits this cube's color list at median index, and returns two newly created cubes.
            </summary>
            <param name="componentIndex">Index of the component (red = 0, green = 1, blue = 2).</param>
            <param name="firstMedianCutCube">The first created cube.</param>
            <param name="secondMedianCutCube">The second created cube.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.SetPaletteIndex(System.Int32)">
            <summary>
            Assigns a palette index to this cube, to be later found by a GetPaletteIndex method.
            </summary>
            <param name="newPaletteIndex">The palette index to be assigned to this cube.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutCube.IsColorIn(System.Drawing.Color)">
            <summary>
            Determines whether the color is in the space of this cube.
            </summary>
            <param name="color">The color to be checked, if it's contained in this cube.</param>
            <returns>if true a color is in the space of this cube, otherwise returns false.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer">
            <summary>
            The premise behind median cut algorithms is to have every entry in the color map represent 
            the same number of pixels in the original image. In contrast to uniform sub-division, these 
            algorithms divide the color space based on the distribution of the original colors. The 
            process is as follows[2]: 
            
            1. Find the smallest box which contains all the colors in the image.
            2. Sort the enclosed colors along the longest axis of the box.
            3. Split the box into 2 regions at median of the sorted list.
            4. Repeat the above process until the original color space has been divided into 256 regions.
            5. The algorithm then divides the color space in a manner depicted below.
            6. The representative colors are found by averaging the colors in each box, and the appropriate color map index assigned to each color in that box.
            
            Because these algorithms use image information in dividing the color space this class of 
            algorithms consistently produce good results while having memory and time complexity no 
            worse than popularity algorithms[1].
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.SplitCubes(System.Int32)">
            <summary>
            Splits all the cubes on the list.
            </summary>
            <param name="colorCount">The color count.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.Prepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.OnFinish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.MedianCut.MedianCutQuantizer.GetPaletteIndex(System.Drawing.Color,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer">
            <summary>
            The NeuQuant Neural-Net image quantization algorithm (© Anthony Dekker 1994) 
            is a replacement for the common Median Cut algorithm. It is described in the 
            article Kohonen neural networks for optimal colour quantization  in Volume 5, 
            pp 351-367 of the journal Network: Computation in Neural Systems, Institute of 
            Physics Publishing, 1994 (PDF version available).
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.Quality">
            <summary>
            Gets or sets the quality.
            </summary>
            <value>The quality.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer"/> class.
            </summary>
            <param name="quality">The quality.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.LearnNeuron(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Forces the strength of bias of the neuron towards certain color.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.LearnNeuronNeighbors(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Spread the bias to neuron neighbors.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.GetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.OnFinish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.NeuQuant.NeuralColorQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.#ctor(System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode"/> class.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.IsLeaf">
            <summary>
            Gets a value indicating whether this node is a leaf.
            </summary>
            <value><c>true</c> if this node is a leaf; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.Color">
            <summary>
            Gets the averaged leaf color.
            </summary>
            <value>The leaf color.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.ActiveNodesPixelCount">
            <summary>
            Gets the active nodes pixel count.
            </summary>
            <value>The active nodes pixel count.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.ActiveNodes">
            <summary>
            Enumerates only the leaf nodes.
            </summary>
            <value>The enumerated leaf nodes.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.AddColor(System.Drawing.Color,System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer)">
            <summary>
            Adds the color.
            </summary>
            <param name="color">The color.</param>
            <param name="level">The level.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.GetPaletteIndex(System.Drawing.Color,System.Int32)">
            <summary>
            Gets the index of the palette.
            </summary>
            <param name="color">The color.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.RemoveLeaves(System.Int32,System.Int32,System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer)">
            <summary>
            Removes the leaves by summing all it's color components and pixel presence.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.GetColorIndexAtLevel(System.Drawing.Color,System.Int32)">
            <summary>
            Calculates the color component bit (level) index.
            </summary>
            <param name="color">The color for which the index will be calculated.</param>
            <param name="level">The bit index to be used for index calculation.</param>
            <returns>The color index at a certain depth level.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode.SetPaletteIndex(System.Int32)">
            <summary>
            Sets a palette index to this node.
            </summary>
            <param name="index">The palette index.</param>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer">
             <summary>
             The idea here is to build a tree structure containing always a maximum of K different 
             colors. If a further color is to be added to the tree structure, its color value has 
             to be merged with the most likely one that is already in the tree. The both values are 
             substituted by their mean. 
            
             The most important data structure are the nodes of the octree. Each inner node of the 
             octree contain a maximum of eight successors, the leave nodes keep information for the 
             color value (colorvalue), the color index (colorindex), and a counter (colorcount) for 
             the pixel that are already mapped to a particular leave. Because each of the red, green 
             and blue value is between 0 and 255 the maximum depth of the tree is eight. In level i 
             Bit i of RGB is used as selector for the successors. 
            
             The octree is constructed during reading the image that is to be quantized. Only that 
             parts of the octree are created that are really needed. Initially the first K values 
             are represented exactly (in level eight). When the number of leaves nodes (currentK) 
             exceeds K, the tree has to reduced. That would mean that leaves at the largest depth 
             are substituted by their predecessor.
             </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.Leaves">
            <summary>
            Gets the leaf nodes only (recursively).
            </summary>
            <value>All the tree leaves.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.AddLevelNode(System.Int32,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeNode)">
            <summary>
            Adds the node to a level node list.
            </summary>
            <param name="level">The depth level.</param>
            <param name="octreeNode">The octree node to be added.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.OnGetColorCount">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetColorCount"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.OnFinish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Octree.OctreeQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.OptimalPalette.OptimalPaletteQuantizer.#cctor">
            <summary>
            Initializes the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.OptimalPalette.OptimalPaletteQuantizer"/> class.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.OptimalPalette.OptimalPaletteQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.OptimalPalette.OptimalPaletteQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.OptimalPalette.OptimalPaletteQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityColorSlot.PixelCount">
            <summary>
            Gets or sets the pixel count.
            </summary>
            <value>The pixel count.</value>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityColorSlot.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityColorSlot"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityColorSlot.AddValue(System.Drawing.Color)">
            <summary>
            Adds the value to the slot.
            </summary>
            <param name="color">The color to be added.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityColorSlot.GetAverage">
            <summary>
            Gets the average, just simple value divided by pixel presence.
            </summary>
            <returns>The average color component value.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityQuantizer">
             <summary>
             Popularity algorithms are another form of uniform quantization. However, instead of 
             dividing the color space into 256 regions these algorithms break the color space into 
             much smaller, and consequently many more, regions. One possible implementation is to 
             divide the space into regions 4x4x4 in size (262,144 regions). The original colors are 
             again mapped to the region they fall in. The representative color for each region is the 
             average of the colors mapped to it. The color map is selected by taking the representative 
             colors of the 256 most popular regions (the regions that had the most colors mapped to them). 
             If a non-empty region is not selected for the color map its index into the color map (the 
             index that will be assigned to colors that map to that region) is then the entry in the color 
             map that is closest (Euclidean distance) to its representative color). 
            
             These algorithms are also easy to implement and yield better results than the uniform 
             quantization algorithm. They do, however, take slightly longer to execute and can have a 
             significantly larger storage requirement depending on the size of regions. Also depending 
             on the image characteristics this may not produce a good result. This can be said about all 
             uniform sub-division schemes, because the method for dividing the color space does utilize 
             any information about the image.
             </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityQuantizer.OnCreateDefaultCache">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnCreateDefaultCache"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityQuantizer.OnGetPaletteToCache(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorCacheQuantizer.OnGetPaletteToCache(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Popularity.PopularityQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformColorSlot.AddValue(System.Int32)">
            <summary>
            Adds the value to the slot.
            </summary>
            <param name="component">The color component value.</param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformColorSlot.GetAverage">
            <summary>
            Gets the average, just simple value divided by pixel presence.
            </summary>
            <returns>The average color component value.</returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformQuantizer">
             <summary>
             In uniform quantization each axis of the color space is treated independently. 
             Each axis is then divided into equal sized segments. The planes perpendicular to 
             the axis' that pass through the division points then define regions in the color 
             space. The number of these regions is dependent on the scheme used for dividing the 
             color space. One possible scheme is to divide the red and green axis into 8 segments 
             each and the blue axis into 4 resulting in 256 regions. Another possibility is dividing 
             the red and blue into 6 and the green into 7 segments resulting in 252 regions [3]. Each 
             one of these regions will produce a color for the color map.
             
             Once the color space has been divided each of the original colors is then mapped to the 
             region which it falls in. The representative colors for each region is then the average 
             of all the colors mapped to that region. Because each of the regions represents an entry
             in the color map, the same process for mapping the original colors to a region can be 
             repeated for mapping the original colors to colors in the color map. While this algorithm 
             is quick and easy to implement it does not yield very good results. Often region in the 
             color space will not have any colors mapped to them resulting in color map entries to be
             wasted.
            
             This algorithm can also be applied in a non-uniform manner if the axis are broken on a 
             logarithmic scale instead of linear. This will produce slightly better results because 
             the human eye cannot distinguish dark colors as well as bright ones.
             </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.AddColor(System.Drawing.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.Uniform.UniformQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.RedMinimum">
            <summary>
            Gets or sets the red minimum.
            </summary>
            <value>The red minimum.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.RedMaximum">
            <summary>
            Gets or sets the red maximum.
            </summary>
            <value>The red maximum.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.GreenMinimum">
            <summary>
            Gets or sets the green minimum.
            </summary>
            <value>The green minimum.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.GreenMaximum">
            <summary>
            Gets or sets the green maximum.
            </summary>
            <value>The green maximum.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.BlueMinimum">
            <summary>
            Gets or sets the blue minimum.
            </summary>
            <value>The blue minimum.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.BlueMaximum">
            <summary>
            Gets or sets the blue maximum.
            </summary>
            <value>The blue maximum.</value>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube.Volume">
            <summary>
            Gets or sets the cube volume.
            </summary>
            <value>The volume.</value>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer">
            <summary>
            Author:	Xiaolin Wu
            Dept. of Computer Science
            Univ. of Western Ontario
            London, Ontario N6A 5B7
            wu@csd.uwo.ca
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.CalculateMoments">
            <summary>
            Converts the histogram to a series of moments.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.Volume(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,System.Int64[0:,0:,0:])">
            <summary>
            Computes the volume of the cube in a specific moment.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.VolumeFloat(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,System.Single[0:,0:,0:])">
            <summary>
            Computes the volume of the cube in a specific moment. For the floating-point values.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.Top(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Int32,System.Int64[0:,0:,0:])">
            <summary>
            Splits the cube in given position, and color direction.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.Bottom(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Int64[0:,0:,0:])">
            <summary>
            Splits the cube in a given color direction at its minimum.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.CalculateVariance(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube)">
            <summary>
            Calculates statistical variance for a given cube.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.Maximize(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{System.Int32},System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Finds the optimal (maximal) position for the cut.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.Cut(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube)">
            <summary>
            Cuts a cube with another one.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.Mark(Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorCube,System.Int32,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Marks all the tags with a given label.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnPrepare(Erwine.Leonard.T.GDIPlus.Palette.Helpers.ImageBuffer)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.OnAddColor(System.Drawing.Color,System.Int32,System.Int32,System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.AddColor(System.Drawing.Color,System.Int32,System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.OnGetPalette(System.Int32)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPalette(System.Int32)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnGetPaletteIndex(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32@)"/> for more details.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.OnFinish">
            <summary>
            See <see cref="M:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.BaseColorQuantizer.OnFinish"/> for more details.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.XiaolinWu.WuColorQuantizer.AllowParallel">
            <summary>
            See <see cref="P:Erwine.Leonard.T.GDIPlus.Palette.Quantizers.IColorQuantizer.AllowParallel"/> for more details.
            </summary>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.RgbColor32">
            <summary>
            
            </summary>
        </member>
        <member name="F:Erwine.Leonard.T.GDIPlus.RgbColor32.ParseRegex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColor32.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColor32.Red">
            <summary>
            The intensity of the red layer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColor32.Green">
            <summary>
            The intensity of the green layer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColor32.Blue">
            <summary>
            The intensity of the blue layer.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.#ctor(Erwine.Leonard.T.GDIPlus.RgbColorF)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.#ctor(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.#ctor(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="argb"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.AsHsb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.AsHsbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.AsRgbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.RgbColor32)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(System.Int32)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte}})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (MAX_VALUE - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (MAX_VALUE - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToARGB">
            <summary>
            Gets the ARGB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value.
            </summary>
            <returns>The ARGB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColor32" /> value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <param name="canShorten"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="canShorten"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToHexidecimalString(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToValueParameterString(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.ToValueParameterString(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColor32.TryParse(System.String,Erwine.Leonard.T.GDIPlus.RgbColor32@)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Erwine.Leonard.T.GDIPlus.RgbColorF">
            <summary>
            
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColorF.Alpha">
            <summary>
            The opaqueness of the color.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColorF.Red">
            <summary>
            The intensity of the red layer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColorF.Green">
            <summary>
            The intensity of the green layer.
            </summary>
        </member>
        <member name="P:Erwine.Leonard.T.GDIPlus.RgbColorF.Blue">
            <summary>
            The intensity of the blue layer.
            </summary>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
            <param name="alpha"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="red"></param>
            <param name="green"></param>
            <param name="blue"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.#ctor(Erwine.Leonard.T.GDIPlus.RgbColor32)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.#ctor(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.#ctor(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="argb"></param>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.AsHsb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.AsHsbF">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.AsRgb32">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte},System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IColorModel,System.Boolean)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <param name="exact"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.RgbColorF)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Byte})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IHsbColorModel{System.Single})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(Erwine.Leonard.T.GDIPlus.IColorModel)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.GetHashCode">
            <summary>
            Returns the hash code for this value.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IRgbColorModel{System.Single}})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.MergeAverage(System.Collections.Generic.IEnumerable{Erwine.Leonard.T.GDIPlus.IColorModel})">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ShiftHue(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value with the color hue adjusted.
            </summary>
            <param name="degrees">The number of degrees to shift the hue value, ranging from -360.0 to 360.0. A positive value shifts the hue in the red-to-cyan direction, and a negative value shifts the hue in the cyan-to-red direction.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value with the color hue adjusted.</returns>
            <remarks>The values 0.0, -360.0 and 360.0 have no effect since they would result in no hue change.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="degrees" /> is less than -360.0 or <paramref name="degrees" /> is greater than 360.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ShiftSaturation(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value with the color saturation adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases saturation, a negative value decreases saturation and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value with the color saturation adjusted.</returns>
            <remarks>For positive values, the target saturation value is determined using the following formula: <c>saturation + (1.0 - saturation) * percentage</c>
            <para>For negative values, the target saturation value is determined using the following formula: <c>saturation + saturation * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ShiftBrightness(System.Single)">
            <summary>
            Returns a <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value with the color brightness adjusted.
            </summary>
            <param name="percentage">The percentage to saturate the color, ranging from -1.0 to 1.0. A positive value increases brightness, a negative value decreases brightness and a zero vale has no effect.</param>
            <returns>A <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value with the color brightness adjusted.</returns>
            <remarks>For positive values, the target brightness value is determined using the following formula: <c>brightness + (1.0 - brightness) * percentage</c>
            <para>For negative values, the target brightness value is determined using the following formula: <c>brightness + brightness * percentage</c></para></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="percentage" /> is less than -1.0 or <paramref name="percentage" /> is greater than 1.0.</exception>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ToARGB">
            <summary>
            Gets the ARGB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value.
            </summary>
            <returns>The ARGB integer value for the current <see cref="T:Erwine.Leonard.T.GDIPlus.RgbColorF" /> value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ToString(Erwine.Leonard.T.GDIPlus.ColorStringFormat)">
            <summary>
            Gets formatted string representing the current color value.
            </summary>
            <param name="format">The color string format to use.</param>
            <returns>The formatted string representing the current color value.</returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ToPercentParameterString(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ToPercentParameterString(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Erwine.Leonard.T.GDIPlus.RgbColorF.TryParse(System.String,Erwine.Leonard.T.GDIPlus.RgbColorF@)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
    </members>
</doc>
